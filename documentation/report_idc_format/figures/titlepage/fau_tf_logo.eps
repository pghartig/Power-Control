%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fau_tf_logo.pdf
%%Creator: Adobe Acrobat 10.0.1
%%For: ruder
%%CreationDate: 06.04.2011, 18:22:00
%%BoundingBox: -1 0 505 137
%%HiResBoundingBox: 0 0 504.2636 136.6131
%%CropBox: 0 0 504.2636 136.6131
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 49227 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:idPriv="http://ns.adobe.com/xmp/InDesign/private"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmpMM:InstanceID="uuid:1b8645ce-5fe9-4baf-ac42-378b74c51b05"
   xmpMM:DocumentID="xmp.did:DDFE05580A2068118083857134B793CF"
   xmpMM:OriginalDocumentID="adobe:docid:indd:d00aaf66-380c-11df-b051-f3cbdd864860"
   xmpMM:RenditionClass="proof:pdf"
   xmp:CreateDate="2011-04-04T10:16:57+02:00"
   xmp:ModifyDate="2011-04-06T18:21:18+02:00"
   xmp:MetadataDate="2011-04-06T18:21:18+02:00"
   xmp:CreatorTool="Adobe InDesign CS5 (7.0.1)"
   idPriv:DocChangeCount="31"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 9.9"
   pdf:Trapped="False">
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:DCFE05580A2068118083857134B793CF"
    stRef:documentID="xmp.did:5DF730884F2068118083CCC6424B1530"
    stRef:originalDocumentID="adobe:docid:indd:d00aaf66-380c-11df-b051-f3cbdd864860"
    stRef:renditionClass="default"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:278C68433D2068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:13:36+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:288C68433D2068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:13:36+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:298C68433D2068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:15:52+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8DA151603E2068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:21:34+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1D49A1F33F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:32:51+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2649A1F33F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:37:59+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8ABA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:38:20+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8BBA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:39:02+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8CBA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:39:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8DBA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:40:47+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8EBA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:41:39+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8FBA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:43:37+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:90BA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:43:55+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:91BA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:46:29+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:92BA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:47:04+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:93BA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:48:26+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:94BA01B8402068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:49:41+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1698A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T16:49:51+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1798A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:07:36+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1898A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:13:18+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1998A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:13:33+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1A98A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:13:53+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1B98A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:14:40+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1C98A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:15:11+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1D98A053422068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:16:35+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0A2A7B1B462068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:16:55+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0B2A7B1B462068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:17:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0C2A7B1B462068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:17:57+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0D2A7B1B462068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:20:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0E2A7B1B462068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:20:24+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0F2A7B1B462068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:21:46+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:102A7B1B462068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:22:01+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:54741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:23:55+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:55741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:24:52+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:56741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:25:24+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:57741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:26:27+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:58741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:26:41+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:59741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:27:24+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5A741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:27:44+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5B741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:28:38+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5C741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:29:18+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5D741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:29:48+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5E741916472068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:30:34+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:40A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:30:45+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:41A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:31:32+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:42A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:32:52+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:43A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:33:16+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:44A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:34:01+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:45A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:34:37+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:47A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:35:14+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:48A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:35:26+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:49A7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:36:40+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4AA7C30A482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:36:49+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6E23F4F2482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:37:15+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:7023F4F2482068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:39:07+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:7CE5654A492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:39:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:7DE5654A492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:40:56+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:7EE5654A492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:41:14+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:18EBAD85492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:41:21+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:19EBAD85492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:42:40+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1AEBAD85492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:43:02+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1BEBAD85492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:43:11+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DF6669D9492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:43:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E06669D9492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:44:03+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E16669D9492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:44:08+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E26669D9492068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:44:53+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:208F8AE74A2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:51:15+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:24536B0E4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:52:20+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:B86693184B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:52:37+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:B96693184B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:52:52+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:BA6693184B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:53:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:D6BE43444B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:53:50+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:D7BE43444B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:54:14+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:D8BE43444B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:54:40+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:D9BE43444B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:54:49+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DABE43444B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:55:11+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:62B5B2794B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:55:20+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:63B5B2794B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:55:53+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E0DE17954B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:56:06+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:9656BA9C4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:56:19+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:9756BA9C4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:56:31+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:9856BA9C4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:57:39+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F3B494CE4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:57:43+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F4B494CE4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:58:14+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3CFCF9ED4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:58:35+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3DFCF9ED4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:58:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3EFCF9ED4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:58:47+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3FFCF9ED4B2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:59:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8ABB901D4C2068118083CCC6424B1530"
      stEvt:when="2011-04-01T17:59:55+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:27A2B1264C2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:00:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:28A2B1264C2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:00:27+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DC267F344C2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:00:34+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DD267F344C2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:00:44+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DE267F344C2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:01:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E3928D854F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:24:18+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5BF730884F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:24:22+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5CF730884F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:25:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:5DF730884F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:25:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1AF6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:25:21+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1BF6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:25:44+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1CF6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:26:07+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1DF6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:26:11+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1EF6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:26:16+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1FF6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:27:15+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:20F6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:27:28+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:21F6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:27:39+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:22F6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:27:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:23F6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:28:04+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:24F6F7AA4F2068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:28:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:B0C35E1C502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:28:31+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:65517022502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:28:41+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:66517022502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:28:47+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:67517022502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:28:57+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:68517022502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:29:09+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:69517022502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:29:24+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6A517022502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:29:56+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:24199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:30:04+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:25199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:30:14+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:26199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:30:47+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:27199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:33:43+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:28199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:51:07+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:29199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:51:14+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2A199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:51:21+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2B199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:51:30+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2C199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:51:35+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2D199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:51:49+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2E199F53502068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:52:30+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1862447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:52:42+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1962447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:53:05+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1A62447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:53:32+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1B62447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:53:45+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1C62447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:53:57+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1D62447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:54:06+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1E62447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:54:15+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1F62447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:54:17+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2062447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T18:54:44+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2162447D532068118083CCC6424B1530"
      stEvt:when="2011-04-01T19:04:19+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:32762A26552068118083CCC6424B1530"
      stEvt:when="2011-04-01T19:04:35+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:33762A26552068118083CCC6424B1530"
      stEvt:when="2011-04-01T19:05:53+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DBFE05580A2068118083857134B793CF"
      stEvt:when="2011-04-04T09:25:08+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DCFE05580A2068118083857134B793CF"
      stEvt:when="2011-04-04T09:30:49+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:DDFE05580A2068118083857134B793CF"
      stEvt:when="2011-04-04T09:30:49+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0B9F961E0C2068118083857134B793CF"
      stEvt:when="2011-04-04T09:37:50+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0C9F961E0C2068118083857134B793CF"
      stEvt:when="2011-04-04T09:39:19+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:EC9A205E0C2068118083857134B793CF"
      stEvt:when="2011-04-04T09:39:37+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:ED9A205E0C2068118083857134B793CF"
      stEvt:when="2011-04-04T09:53:38+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:EE9A205E0C2068118083857134B793CF"
      stEvt:when="2011-04-04T09:55:07+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:EF9A205E0C2068118083857134B793CF"
      stEvt:when="2011-04-04T10:10+02:00"
      stEvt:softwareAgent="Adobe InDesign 7.0"
      stEvt:changed="/;/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmp:PageInfo>
    <rdf:Seq>
     <rdf:li
      xmpTPg:PageNumber="1"
      xmpGImg:format="JPEG"
      xmpGImg:width="256"
      xmpGImg:height="256"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4AE0Fkb2JlAGSAAAAAAQUAAgAD/9sAhAAKBwcHBwcKBwcKDgkJCQ4RDAsLDBEU&#xA;EBAQEBAUEQ8RERERDxERFxoaGhcRHyEhISEfKy0tLSsyMjIyMjIyMjIyAQsJCQ4MDh8XFx8rIx0j&#xA;KzIrKysrMjIyMjIyMjIyMjIyMjIyMjI+Pj4+PjJAQEBAQEBAQEBAQEBAQEBAQEBAQED/wAARCAEA&#xA;ALUDAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEBAQAA&#xA;AAAAAAABAAIDBAUGBwgJCgsQAAIBAwMCBAIGBwMEAgYCcwECAxEEAAUhEjFBUQYTYSJxgRQykaEH&#xA;FbFCI8FS0eEzFmLwJHKC8SVDNFOSorJjc8I1RCeTo7M2F1RkdMPS4ggmgwkKGBmElEVGpLRW01Uo&#xA;GvLj88TU5PRldYWVpbXF1eX1ZnaGlqa2xtbm9jdHV2d3h5ent8fX5/c4SFhoeIiYqLjI2Oj4KTlJ&#xA;WWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+hEAAgIBAgMFBQQFBgQIAwNtAQACEQMEIRIxQQVRE2Ei&#xA;BnGBkTKhsfAUwdHhI0IVUmJy8TMkNEOCFpJTJaJjssIHc9I14kSDF1STCAkKGBkmNkUaJ2R0VTfy&#xA;o7PDKCnT4/OElKS0xNTk9GV1hZWltcXV5fVGVmZ2hpamtsbW5vZHV2d3h5ent8fX5/c4SFhoeIiY&#xA;qLjI2Oj4OUlZaXmJmam5ydnp+So6SlpqeoqaqrrK2ur6/9oADAMBAAIRAxEAPwCa+VPKflW48q6L&#xA;c3Gi6fNNLp9rJLJJaws7u0MbMzM0dSSTuTiqSfpLyN/1K2kf8jdI/wCq2ZH5Y9/2Fx/zI7vtDv0l&#xA;5G/6lbSP+Rukf9Vsfyx7/sK/mR3faEx0mPyNqgunby7pNvHZxGZ3pp0w4jx9B34/NqDITwmNftZw&#xA;zCV/sS9NR8iM6h/LGkKpIBb1dINB409fJ/lj3/YWH5kd32hmC+TvJzqGXQtMZWFQRaQEEH/nnmO5&#xA;DFLy68j2d5PaN5Y0ljbyPEWL6UhPBiteEkqsvToRXL46ckXf2FolqADVfaGWf4M8n/8AVh03/pDg&#xA;/wCqeUN7GNUfyRpd/NYP5Z0l2gIBYtpkRNQG/u5pEcde4y6GAyF/oLTPOImv0hky+TvJ7KG/QOm7&#xA;gH/eSA9flHlLc3/gzyf/ANWHTf8ApDg/6p4q7/Bnk/8A6sOm/wDSHB/1TxV3+DPJ/wD1YdN/6Q4P&#xA;+qeKu/wZ5P8A+rDpv/SHB/1TxV3+DPJ//Vh03/pDg/6p4q7/AAZ5P/6sOm/9IcH/AFTxV3+DPJ//&#xA;AFYdN/6Q4P8Aqnirv8GeT/8Aqw6b/wBIcH/VPFXf4M8n/wDVh03/AKQ4P+qeKu/wZ5P/AOrDpv8A&#xA;0hwf9U8Vd/gzyf8A9WHTf+kOD/qnirv8GeT/APqw6b/0hwf9U8VSm58p+VV81abbrouniGTT7+R4&#xA;xaw8GdJtNVGK+nQlRI1D7nxxVNfJ3/KHaF/2zLT/AJMR4qwTR7S2bVLYXkDG3Mg9QT2mmLFx/wAt&#xA;ozyA+WZs5HhNfeXBhEcQv7gzr9H+S/8All0v/kXB/TMbiyd5crhx9wSnzJ+hbPTmttFt4FkvCEma&#xA;whtHPpqeVHWYqhBNOtcsxcRO5+dteXhEdh8qY2+iSJpUWqFJaSzNEI/qWmcqAVD9ONKgj7WW+J6q&#xA;/SWnw/Tf6AzzyneNd6NEkgdZLX9wwlWJGIX7B4W7MgHE028Mxs0ak5WGVxYFrFuW1e+b0ZjW5mNR&#xA;aaawPxt0aU8z8238cyYH0j9ZcWY9R/UHq+YTnPMfNEBfXrxvSmarLutrp8g+wvR7g+of9lmZiPoH&#xA;7XDyj1n9Qelxf3af6o/V7ZhlzAvxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpLdf8phpf/bN1L/k/pWK&#xA;teTv+UO0L/tmWn/JiPFXnllpF1e3cVoNNa39ZuPq3GgqkS17u/rmgzOlMAXf+ycCMCTVf7FkH/Ku&#xA;rz/f+l/9wxP+quV/mR5/Nt/LHy+SQX+j3NheS2n6ON16R4+tbaCrxNtX4H9cVyyMwRd/7JrlAg1X&#xA;+xTufVraby6mhL5f1NDGiUY6SGhEgPJ3FuZAvxNXavfKxAid8Q+bYZgwrhPyX+SJZ7LU2tTY3VvD&#xA;eJRmOk/UYw8YLK0kqzyduQAI6nHOAY3f22uAkSqvspKNYs5G1e+YaZcSBrmY810FZg1Xb4hN9ZXn&#xA;X+am/XJwl6Rv/smE4+o7f7F6tmE5rzLzRaPJr14406ecFl/eJoi3St8C9JzcJz+7MzEfQN/9k4eU&#xA;es7f7F6VH/dp2+EbUp28Mwy5gX4q7FXYq7FXYq7FXYq7FXYq7FXYq7FUluv+Uw0v/tm6l/yf0rFW&#xA;vJ3/ACh2hf8AbMtP+TEeKvOvLFlZR+YLB47WxRlmUhootVDg/wCSbhvTr/rbZn5ZHgO5+xwMMRxj&#xA;Yfa9W1K9TTrC4vXIAhQsKhiC3RQRGrNufAZhRjxGnNnLhFvK9B0Cw1/XBHe2dlKkpea5aNdUjkPU&#xA;kh7iRUqWI65mZMhhHYn7HCx4xOW4H2s1/wCVaeSf+rb/AMl7j/qtmP8Amsve5P5XF3MGv9JtfL+v&#xA;utraWET2U6y27NHqsjKARLEWaN3jLUpWm2ZMZmcNyfscaUBCfIfanPmzytBeynzJY2NnPa3kaTSt&#xA;MuoGbkw+16VpINqUr8Ap3yvDlI9JJ+xszYgfUAPtULfzp5itYI7aGbTxHCixoGtNTchVFBVnRmP0&#xA;nCcECev2MRnmB0+1S0LymPMWoG/vLKxktmlMl1Nx1OOSQsSzen9ZmRWJPU70/DDkzcAoE/YuPDxm&#xA;yB9r1XMJzXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUluv+Uw0v/tm6l/yf0rFXeTP+UP0H/tm2f/Ji&#xA;PFU5oPDFXYq6gHQYq3irVB4Yq7FXUHhirumKt4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkt1/wAp&#xA;hpf/AGzdS/5P6VirvJn/ACh+g/8AbNs/+TEeKp1irsVdirsVdirsVdirsVdirsVQWsaj+idOm1AQ&#xA;tcejx/dJszcmVNtj05ZKEeI0xnLhjaXfp/U44Gu7zR5Le1WNpTL68TnZSyKEU8qsaD6cn4cboFh4&#xA;kqshdB5l9bRbnVjZyxy2jFJLR9nrVenw+DeGA4qlVpGW43Svda2ba2064+rO/wCkZIo+IO8XqjlV&#xA;tv2cAx2T5JOSgPNNcgzdirsVdirsVdirsVSW6/5TDS/+2bqX/J/SsVd5M/5Q/Qf+2bZ/8mI8VTrF&#xA;XYq7FXYq7FXYq7FXYq7FXYqlnmKGS40a4hhjaV24URBVjSRDt92TxmpMMouKT6joAMNlbWUMxknI&#xA;9Z2ZjGgAFeYNQNz+GWRyc7a5Y+VLp7DVBcXtvLCJv0jAGMkIpH6kf2VJanEkL+OASjQ8kmMrPmqD&#xA;63qC6ZZ/UJ4fqckTyyTAKg9IAfCeRrjsLNrvKhSOubeWSaQqjAAEr8Mu7cmA+zOop8Xh0yALMjdp&#xA;ILji6gMpIFDxl6UPJd5+pHTww2EUVVo7crU290eVAaPJXoqf79r0GCymgibOOFGkMccsZJHL1SxB&#xA;p8I48mYdsEiUxARWRZOxV2KpLdf8phpf/bN1L/k/pWKu8mf8ofoP/bNs/wDkxHiqdYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkt1/wAphpf/AGzdS/5P6VirxPS/+OZZ/wDG&#xA;CL/iC5MPJav+/n/WP3orC0M3/LL/AHtvv+MSf8SORk7jsP65PRci7x2KuxV2KuxV2KuxV2KvG/Oe&#xA;lDW/zHfSzMLb140/esKheEHqdKr140zPwT4MNuv1EOPNSUDyto094NNstcSe9Mvpej9WlQVDUkPq&#xA;N8PwqCevbLPFkBZjs1+DEmhLdq58mG38w2ei/XY5Ib5C8d4q1XYOSKc/8nx74jPcCaU4KmBfND6f&#xA;5YF9eatafW1i/RKysHK1EvpMy7fEKV44ZZaANc2McPESL5JBlrU7FXYq7FXYq7FXYqpN/vVH/wAY&#xA;5P1x5A/WPcf0Mx9B94/S948p+aNCt/KuiwTXXGSLT7VHX05DRlhjBFQhHUZhR0OaQBA+5ycna+kh&#xA;IxMtxtyP6k3/AMXeXv8Alr/5Jy/9U8P8n5/5v3Mf5a0f8/7D+pF6frOm6o7pYzeq0YDMOLrQH/XV&#xA;cry6bJiHqDkabX4NSSIG696OylyXYq7FXYq7FXYq7FXYq8k8xXUFl+aa3NzIsMSRrykc0UVtmUVP&#xA;zOZ2IE4HBykDPZUtK84L9Y1K51GeAQW3L6qiACSXdqcDXfYd/HDPDsKYwz7m1ttrnl+W3067jna3&#xA;OlTlVjuGrN6cqlHI48qirg/7HE452R3qMkCAe5DxzaZpEuuaj+lLe5/SKSiCGEs0hMhZgG+HbrhI&#xA;lKhXJAMY8RvmhtP1Gzhs7ZHul5URXXlCOChFZtntmP7FOvX78Mokk7MYyAA3VptR0znGzTxyqr/Z&#xA;5wGh5Lxfa2AoDufliIySZxS5bnUVbjHqmnKq8mAMcdBUtIaf6MR9onJUO4sLl3hLtYuLyZYFuru3&#xA;uwORX6uqjjWjHlxjj/mycAByDCZJ5lK8mwdirsVUm/3qj/4xyfrjyB+se4/oZj6D7x+l6Z5f8r67&#xA;caDpk8Nryjls4HRvUjFVaNCDQuD0OWYddhjjiCenm6vV9kaueechHYyJ5jv96Y/4R8w/8sn/ACUi&#xA;/wCqmWfyhg/nfe0fyLrP5n2j9bIfKGjalpdxcvfQ+ksiKqnkjVIP+QzZhdoanHliOEu37E0GfTTk&#xA;Zir9zKs1zvHYq7FXYq7FXYq7FXYq8L/NH/lMbr/jHD/ybXNjpP7t1ms/vGIZkOO7FXYq7FXYq7FX&#xA;Yq7FXYq7FVJv96o/+Mcn648gfrHuP6GY+g+8fpe4eVfM/wBX8r6NB9W5elYWqcvUpXjCgrThmqp2&#xA;3Em3+LP+XT/kp/17x4V4kfpWs/pOSSP0fS9NQ1eXKtTT+VcSKSDaZ4EuxV2KuxV2KuxV2KuxV4X+&#xA;aP8AymN1/wAY4f8Ak2ubHSf3brNZ/eMQzIcd2KuxV2KuxV2KuxV2KuxV2KqTf71R/wDGOT9ceQP1&#xA;j3H9DMfQfeP0vcPKvlj6x5X0af6zx9WwtX4+nWnKFDSvPNVbtuFNv8J/8vf/ACT/AOvmPEvCj9K0&#xA;b9GSSSet6vqKFpx40oa/zNiTaQKTPAl2KuxV2KuxV2KuxV2KvC/zR/5TG6/4xw/8m1zY6T+7dZrP&#xA;7xiGZDjuxV2KuxV2KuxV2KuxV2KuxVSb/eqP/jHJ+uPIH6x7j+hmPoPvH6WV6T+Y3mqx0qysre5j&#xA;WG2t4oYwYkJCIiooqV8BmmMi9lh7PwyxxJHMIv8A5Wf5w/5ao/8AkTH/AM04OItn8m4O5mX5cebN&#xA;b8x3l7DqsqypBEjoFRUoSxB+yBkoklwe0NLjwxHC9AyTr3Yq7FXYq7FXYq7FXYq8L/NH/lMbr/jH&#xA;D/ybXNjpP7t1ms/vGIZkOO7FXYq7FXYq7FXYq7FXYq7FVJv96o/+Mcn648gfrHuP6GY+g+8fpe1+&#xA;Vvy/8o3vlnR7y50/nPcWFtLK/rTjk7wozGiygCpPbNRwh6GOuzxAAP3Jr/yrbyV/1bf+S9x/1Wx4&#xA;Qy/lHUfzvsCY6N5W0Ly/JLLpFr9WeZQsh9SR6gGo/vHfEABqzanJlHqKb4Wl2KuxV2KuxV2KuxV2&#xA;KvC/zR/5TG6/4xw/8m1zY6T+7dZrP7xiGZDjuxV2KuxV2KuxV2KuxV2KuxVSb/eqP/jHJ+uPIH6x&#xA;7j+hmPoPvH6WeaJNKNF08B2AFrDQVP8Avtc4TUzl4st+pesxAcA9yO9ab/fjfecp45d7KgynyLI7&#xA;3V1zYtSNepr+1mz7IkTKVuLrBsGa5uHDdirsVdirsVdirsVdirwv80f+Uxuv+McP/Jtc2Ok/u3Wa&#xA;z+8YhmQ47sVdirsVdirsVdirsVdirsVUm/3qj/4xyfrjyB+se4/oZj6D7x+l9HeTP+UP0H/tm2f/&#xA;ACYjzUu4TrFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUluv+Uw0v8A7Zup&#xA;f8n9KxV3kz/lD9B/7Ztn/wAmI8VRn6b0b/lvtv8Akan/ADVkvDl3MfEj3omO5tppJIYZUkkhNJEV&#xA;gWQn+YDp0wEEJBBWpe2clu11HPG0C15ShwUFOtWrTHhN0vEKtVjkSVFljYOjgMrKagg7ggjAldir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqS3X/ACmGl/8AbN1L/k/pWKu8mf8AKH6D/wBs&#xA;2z/5MR4qkOmW+lwaM181hY3FrGWLXMwiJ60pVq99hvl0pZDKnCgZCN8IRGlLZ6VeW2pSEwtqPOO4&#xA;klVkR3lYyRkM1FJb2xkZSFM8ZMSCevNbZ3WiWvlu60uS7t4nrKrwO6q4J2IKM3LEiZldLCVYiDVp&#xA;7bTyWVjZW0SKaW8SopWStQtBUJG9Bt3yBFkkt0SREL49UleQp6Y7cfgnBO4U1rBt12x4EiasLq5d&#xA;C0aRBhzAV3ZehIWtY6j32+/BQTZXRTXTyUYQ8O/CQs33cBgICglFYGTsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVSW6/5TDS/+2bqX/J/SsVd5M/5Q/Qf+2bZ/wDJiPFUz+o2QgNqLeP0CamLgOFa1+zS&#xA;mHiN2jhFUumtre4jEU8SSxgghXUMAR02OIJCkAqb6fYSTfWJLaJ5qg+oyKWqOh5UrjxGua8IvkpX&#xA;ktvHOplihYgL+8kNGAJYCnwN39/H6UEteSYiVBFtfUWOCztj6gqoUgVCkVrSKm1B3w8R72InvQAV&#xA;jZoxIawtypYueh+KteVPT6k98HEe9nR7gqRQej8cdpDG+9OBH0b8BiSSkWOiIQykt6ihQD8NDWo9&#xA;9hTAyBPVfil2KoTU9Qh0qxlv7hXeOHjyWMcmPJlQUFR3bJQiZGmM5CItLY/NMLgvJp9/BEqPIZpb&#xA;cqgCKX+1XvSg98kcR7wxGYdxVU8zWEmjSa4iSmCJuDx8R6oYsqU41/ygevTHwjxUvijhtEXes21n&#xA;9R9RJG/SMiRRcVB4l6U577DfIiBN+TIzArzTDIsnYq7FXYq7FXYq7FUluv8AlMNL/wC2bqX/ACf0&#xA;rFXeTP8AlD9B/wC2bZ/8mI8VTrFXYq7FXYq7FXYq7FXYq7FXYqlnmL1xo1x9Wga5l+DjCo5Fv3iV&#xA;29hvhERI1dMZkgXVpdqsF/6VlZ2cU07XRHreqxMESqAf3mxpv027ZCGnjuTI/NM8ktgAEPOmtpJe&#xA;WEljHJ9biE6Nb1MBlRgeDF1WjMFPXvTLTjgd+I/jua+KQ2oKsd/f6pcabbrpNxbi3ZZLiW5VUROA&#xA;WvpnkSfbbGWIAfV8v0qMhJHpTCVrkyzMpdVVm4jhcsT8RB+xIAfagwikm1OJrr0TzaSgVyP3d1y4&#xA;0Stays1a9B18OhxNX/Youv7US81sWoyXlVAb4ROAdj3U0/a/zpgo+SbHmirQR0YxiYU2PrFyd/i2&#xA;9QnxyJZRRGBLsVdiqS3X/KYaX/2zdS/5P6VirvJn/KH6D/2zbP8A5MR4qnWKuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxVC/6V6jij8akgkpTvsKCv35V67/sZbUs/wBNATaQkkBt4tvc7fqyP7zbn9if&#xA;SujN4SA6uoOxNYzTcb7DDHj6/oU8LX+mDkhDkEbODHUEk9Nh0+WPr/FL6VaJ5iwSSIqAv2yymp8K&#xA;Lk4mXUMSArZNDsVSW6/5TDS/+2bqX/J/SsVd5M/5Q/Qf+2bZ/wDJiPFU6xVJZtW1T9KXNhb2kAit&#xA;whW4uJmjWTkqsQoWGToTlgjHhslrMpcVAKMmv6nDeRW76essIKLdXMEpaOMyMwHHlGhYBQCfuxEI&#xA;kc0GcgapMItQuZNYn01rYrBFEsi3PLZmPH4eNPfxyJiOG7ZiR4qp2m6lNeLdNdwfVBb3DwpyavNF&#xA;pR9wKVxlEDksZE3aM9eEVrIu3X4hgopsLjJGNywH0juafrwUm2jNCOsij6RjRRYXYpbxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KpLdf8phpf/bN1L/k/pWKu8mf8ofoP/bNs/8AkxHiqdYqlUVrdNrN5Ncx&#xA;FrRkT0CWUgkKvKi1qN/HJkjhDAXxHuQMGlavLZ3Essr2s8pdktQUZdt0XmCab++SMogsRGZC6P8A&#xA;xFbSQ3v1T6y0kIimtzLGpV1NOfKvE8gtdj3x9B2tfWN6RNtZ6gNOcXaLJcTyNIYqoQgZSONXV1/A&#xA;5EkXskCVbrGsLkVMdvvQGtLcEv8AaY/3Xifww8QXhKIFo6yFms0n5gfbMVE4tXitIwaVHLvvgvzT&#xA;w+S0wMeROkQH4hX4o/iAHIH7HZh/HG/Na8k06bDIM28VdirsVdirsVdirsVdirsVWtIibMd/DvjS&#xA;rPXQ9AT/AJ++GkW4TxnrUfMf0xpNpTdMv+LtLaop+jdS3rt/f6VgVvyZ/wAofoP/AGzbP/kxHiqd&#xA;Yq7FXYq7FVrorqVbocVUzbRsanl2/aPbFW/QjqTvvTue1f64q76vFx4bkbdSe2KquKuxV2KuxV2K&#xA;uxV2KuxV2KqDys3wxmg6cvE+2EBCzZT8AruKk03FK98Kr5JY2HENTfft0wAKsDV7ht6+NK08cKpL&#xA;dcf8W6Z8O/6O1Ef7L1tL/jiqK8mf8ofoP/bNs/8AkxHkUp1irsVdirsVdirsVaZlRS7EKqipJ2AA&#xA;xVBprGkyuscd7bu7kKqrKhJJ2AADZLgl3MeOPerR3tnLFJPFPG8UNRJIrgqnEVbkQaCgwGJCeIFz&#xA;3tnHbrdvPGtu1OMpcBDXpRq0x4TdLxCrV8CXYq7FXYq7FXYqpTvQBAaFup8BhCCokCm4+EdKbV9s&#xA;Kr+AVfUm+hRgVwJLKFcKCK8QKdcVWSEowEgqCK17+9CMIVKrqJv8XaYOXw/o3UTy709fS9sFqreT&#xA;P+UP0H/tm2f/ACYjwJTrFXYq7FXYq7FXYqoX3H6lccvs+k9a+HE4RzQardh4Sz07QrbUfqenqJAq&#xA;29wErOZGrwZf3f2hSvXtlt5JSpFaeMb3+QWWBtdOjutLEEtsNSs3VY5onTnPHE3qcA3UGv6sMuOW&#xA;+2zCPhR233XXmoaNdeVrPTobiCWVmjjW3Uhn5AkU9MHliI5BMml4sJFXt9rKLi+vI7l4Ybb1lWh5&#xA;hgOw2oab7/LKhEUzMjfJTh1K+kJWSzKkNQ0cHY8qHb5CuExHegSPciBcXTIGVYAxWpRpSKE8aAkI&#xA;3vgoJsqkElzI370Q8aE/u3LHtx6qvvgICQSiMCXYqoE1lY1pSi18Nq4UNRrykAPYcj88SqpLsVcC&#xA;tNj32OISpiSIMWY1PVTQ13xooUZiDICSd/EUNPDJBBSy6mb/ABZph4bfo3UV49/7/S8jSbV/Jn/K&#xA;H6D/ANs2z/5MR4Ep1irsVdirsVdirsVaZVZSrAFWFCD0IOKqRs7QpHEYYykJDRKVFEI6FRTbDxFH&#xA;CG5LeCZ45JY0keI8o2ZQSp8VJ6dMQSFIBWJp9hHN9YjtolmqW9QIoap6nlSuPEa5rwi+SBu7u0hu&#xA;pI5YrcuSByc0LEpX4v3Z7L77YOIhtjh4halHdaYIz9VgtaoQ0aj4F4sp+M/uvh+0R07++PGSv5eu&#xA;i4PYSCMpa2jIyDgxPuy0X9zSm3jh4z3oOAL49QtYVaSBLeNWJj5BigZlFQppF74DIlIw0i4tQgZ2&#xA;R2UHkAnAlqggf5IpvgtBxlF4WCgqBpJFavUdPl/bhQ2lFmZf8kAfR/t49Falk5co07A1Py7YgKsK&#xA;r8Kp1ADGny+4DCrSxxyHhXbrXx+Xh0xtUjuUb/F2mR03/R+oCn/PfTN8Va8ns36J8trU8TocBp2q&#xA;Etd8illGKtVHjirqjFXYq7FW8VdirsVdirsVdirsVdirsVdirsVUJgVfkOjilem4whBWCqUYVJQ9&#xA;9q+PjhVaoflyUmgNRtUnFVqyUYmgoxqV6A+GGkNqWVqqKBthTx8K4EpVcxt/jDTPjHqfo7UD3/3/&#xA;AKZ74LVQ8n/8cvy3/wBsKD/iFrgSynFWJXekWt75hv5Z4pL0lYv3KyvEI6Igr8DLWuZUCBjG9OFk&#xA;MvEPpv4oIwWkN8t5b3T2f6MdEhszIzgryczKxkqW5Fjv4ZKhVd/ViMktzVV0tPdOiiPmPUbyOcyf&#xA;WIoSI6/CFCJRh88pn/dhyMZJyy7lPQymmWV7IJPXV72V2Z3VQlVXbk5A7Y5RZHuRgkaNjqjxrCll&#xA;BjVQxK8jNFt/L0c/arkOBt41ZL55SwhgaTiATxePqSdvt+2DhTxNm6vKgCycgkivOPYDoft98aHe&#xA;tnuRQJIBIoT1HhkWTeKuxV2KuxV2KuxV2KrXQOpU/f4YqhzUfAwo47+3tkkOFVNVPE9DTocVXfEF&#xA;3jUqd69B8++BWjI9KAqi/wCTvjSpLcr/AM7dpgp/0rtR3rvX19L/ABwqs8nxyHR/LkwU+mNEgQt2&#xA;DGO2IH4ZFLJsVQkWnRQ31xqCu5kulVWUkcV4AKOI417dzkjKxTERo2oQaFYwWL2PxSCUOGmk4mWr&#xA;9+XEbjtthOQk2gYwBSg3lq2KQiO6uoZIE9L1opFV3StQr0Sm3bbD4p7keEO9EppttZ2UdpB6qojV&#xA;rGTzYkEEuRg4jIqQIhzWyvIHL3IIoSAQAadAQBh+SL9676uHp+8uVqtNmp03+/By7kg33tJahSHE&#xA;t2TQfCXNNj4Hbvj8lB96OBqK0I9jkCzBtvFLsVdirsVdirsVdirsVWuiuKN9B7jFVFopAKCjjpvs&#xA;aYbRS5ncrxMZH+ftXGlWcGIoI+wBLd6YqlN1FJ/i7S/iFf0bqPy/v9LxtVXyZ/yh+g/9s2z/AOTE&#xA;eBKdYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkt1/ymGl/wDbN1L/AJP6&#xA;Vir/AP/Z"/>
    </rdf:Seq>
   </xmp:PageInfo>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -136.613 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 136.613 li
504.264 136.613 li
504.264 0 li
cp
clp
gsave
-95.548 -1373.38 mo
525.471 -1373.38 li
525.471 -1628.5 li
-95.548 -1628.5 li
cp
clp
581.91 -1411.11 mo
581.91 -1404.29 li
562.425 -1404.29 li
562.425 -1396.38 li
580.307 -1396.38 li
580.307 -1390.07 li
562.425 -1390.07 li
562.425 -1381.04 li
582.321 -1381.04 li
582.321 -1374.21 li
554.307 -1374.21 li
554.307 -1411.11 li
cp
606.857 -1394.42 mo
608.718 -1394.42 610.114 -1394.83 611.042 -1395.66 cv
611.975 -1396.48 612.444 -1397.83 612.444 -1399.69 cv
612.444 -1401.48 611.975 -1402.78 611.042 -1403.59 cv
610.114 -1404.4 608.718 -1404.81 606.857 -1404.81 cv
597.97 -1404.81 li
597.97 -1394.42 li
cp
609.756 -1411.11 mo
611.405 -1411.11 612.896 -1410.85 614.224 -1410.31 cv
615.547 -1409.78 616.686 -1409.05 617.632 -1408.11 cv
618.583 -1407.19 619.307 -1406.11 619.805 -1404.88 cv
620.301 -1403.66 620.554 -1402.34 620.554 -1400.93 cv
620.554 -1398.76 620.097 -1396.89 619.185 -1395.3 cv
618.276 -1393.71 616.78 -1392.51 614.713 -1391.68 cv
614.713 -1391.58 li
615.712 -1391.3 616.539 -1390.88 617.194 -1390.31 cv
617.848 -1389.74 618.381 -1389.07 618.795 -1388.29 cv
619.208 -1387.52 619.514 -1386.67 619.702 -1385.74 cv
619.89 -1384.81 620.019 -1383.88 620.092 -1382.95 cv
620.122 -1382.36 620.159 -1381.67 620.196 -1380.88 cv
620.226 -1380.08 620.29 -1379.28 620.375 -1378.45 cv
620.46 -1377.62 620.598 -1376.84 620.786 -1376.09 cv
620.975 -1375.36 621.262 -1374.73 621.638 -1374.21 cv
613.523 -1374.21 li
613.075 -1375.38 612.802 -1376.78 612.698 -1378.4 cv
612.595 -1380.02 612.444 -1381.56 612.232 -1383.05 cv
611.959 -1384.98 611.371 -1386.39 610.477 -1387.29 cv
609.579 -1388.18 608.114 -1388.63 606.081 -1388.63 cv
597.97 -1388.63 li
597.97 -1374.21 li
589.855 -1374.21 li
589.855 -1411.11 li
cp
635.999 -1411.11 mo
635.999 -1381.04 li
653.984 -1381.04 li
653.984 -1374.21 li
627.888 -1374.21 li
627.888 -1411.11 li
cp
680.087 -1388.48 mo
675.433 -1402.02 li
675.33 -1402.02 li
670.522 -1388.48 li
cp
679.621 -1411.11 mo
693.419 -1374.21 li
684.993 -1374.21 li
682.205 -1382.43 li
668.405 -1382.43 li
665.51 -1374.21 li
657.345 -1374.21 li
671.299 -1411.11 li
cp
706.079 -1411.11 mo
721.48 -1386.36 li
721.584 -1386.36 li
721.584 -1411.11 li
729.18 -1411.11 li
729.18 -1374.21 li
721.069 -1374.21 li
705.717 -1398.92 li
705.613 -1398.92 li
705.613 -1374.21 li
698.017 -1374.21 li
698.017 -1411.11 li
cp
759.417 -1374.5 mo
757.658 -1373.75 755.882 -1373.39 754.091 -1373.39 cv
751.265 -1373.39 748.727 -1373.87 746.469 -1374.86 cv
744.214 -1375.84 742.307 -1377.19 740.759 -1378.91 cv
739.206 -1380.64 738.021 -1382.66 737.192 -1384.99 cv
736.367 -1387.32 735.954 -1389.82 735.954 -1392.51 cv
735.954 -1395.27 736.367 -1397.82 737.192 -1400.18 cv
738.021 -1402.54 739.206 -1404.6 740.759 -1406.36 cv
742.307 -1408.11 744.214 -1409.49 746.469 -1410.49 cv
748.727 -1411.49 751.265 -1411.99 754.091 -1411.99 cv
755.986 -1411.99 757.821 -1411.71 759.596 -1411.14 cv
761.372 -1410.57 762.975 -1409.73 764.402 -1408.63 cv
765.833 -1407.53 767.011 -1406.17 767.941 -1404.55 cv
768.874 -1402.93 769.444 -1401.07 769.65 -1398.97 cv
761.898 -1398.97 li
761.413 -1401.03 760.485 -1402.59 759.107 -1403.62 cv
757.727 -1404.65 756.057 -1405.17 754.091 -1405.17 cv
752.267 -1405.17 750.714 -1404.82 749.439 -1404.11 cv
748.164 -1403.4 747.133 -1402.46 746.338 -1401.27 cv
745.546 -1400.08 744.972 -1398.72 744.609 -1397.21 cv
744.248 -1395.69 744.064 -1394.13 744.064 -1392.51 cv
744.064 -1390.96 744.248 -1389.45 744.609 -1387.98 cv
744.972 -1386.52 745.546 -1385.2 746.338 -1384.03 cv
747.133 -1382.86 748.164 -1381.92 749.439 -1381.21 cv
750.714 -1380.5 752.267 -1380.16 754.091 -1380.16 cv
756.778 -1380.16 758.857 -1380.84 760.322 -1382.2 cv
761.785 -1383.56 762.638 -1385.53 762.876 -1388.11 cv
754.711 -1388.11 li
754.711 -1394.16 li
770.215 -1394.16 li
770.215 -1374.21 li
765.047 -1374.21 li
764.223 -1378.4 li
762.773 -1376.54 761.172 -1375.23 759.417 -1374.5 cv
805.772 -1411.11 mo
805.772 -1404.29 li
786.29 -1404.29 li
786.29 -1396.38 li
804.171 -1396.38 li
804.171 -1390.07 li
786.29 -1390.07 li
786.29 -1381.04 li
806.186 -1381.04 li
806.186 -1374.21 li
778.174 -1374.21 li
778.174 -1411.11 li
cp
822.301 -1411.11 mo
837.702 -1386.36 li
837.806 -1386.36 li
837.806 -1411.11 li
845.404 -1411.11 li
845.404 -1374.21 li
837.289 -1374.21 li
821.938 -1398.92 li
821.835 -1398.92 li
821.835 -1374.21 li
814.239 -1374.21 li
814.239 -1411.11 li
cp
870.165 -1385.17 mo
854.61 -1385.17 li
854.61 -1391.48 li
870.165 -1391.48 li
cp
887.554 -1411.11 mo
902.955 -1386.36 li
903.058 -1386.36 li
903.058 -1411.11 li
910.654 -1411.11 li
910.654 -1374.21 li
902.541 -1374.21 li
887.191 -1398.92 li
887.087 -1398.92 li
887.087 -1374.21 li
879.491 -1374.21 li
879.491 -1411.11 li
cp
933.436 -1415.25 mo
926.46 -1415.25 li
926.46 -1421.29 li
933.436 -1421.29 li
cp
944.084 -1415.25 mo
937.104 -1415.25 li
937.104 -1421.29 li
944.084 -1421.29 li
cp
946.822 -1377.03 mo
944.031 -1374.6 940.172 -1373.39 935.248 -1373.39 cv
930.25 -1373.39 926.381 -1374.59 923.646 -1377 cv
920.905 -1379.42 919.536 -1383.14 919.536 -1388.16 cv
919.536 -1411.11 li
927.647 -1411.11 li
927.647 -1388.16 li
927.647 -1387.17 927.737 -1386.19 927.907 -1385.22 cv
928.079 -1384.26 928.442 -1383.4 928.993 -1382.66 cv
929.544 -1381.92 930.312 -1381.32 931.295 -1380.85 cv
932.273 -1380.39 933.592 -1380.16 935.248 -1380.16 cv
938.14 -1380.16 940.138 -1380.8 941.241 -1382.09 cv
942.345 -1383.39 942.897 -1385.41 942.897 -1388.16 cv
942.897 -1411.11 li
951.007 -1411.11 li
951.007 -1388.16 li
951.007 -1383.17 949.613 -1379.46 946.822 -1377.03 cv
976.35 -1394.42 mo
978.208 -1394.42 979.602 -1394.83 980.532 -1395.66 cv
981.465 -1396.48 981.931 -1397.83 981.931 -1399.69 cv
981.931 -1401.48 981.465 -1402.78 980.532 -1403.59 cv
979.602 -1404.4 978.208 -1404.81 976.35 -1404.81 cv
967.458 -1404.81 li
967.458 -1394.42 li
cp
979.244 -1411.11 mo
980.895 -1411.11 982.388 -1410.85 983.711 -1410.31 cv
985.039 -1409.78 986.176 -1409.05 987.122 -1408.11 cv
988.073 -1407.19 988.795 -1406.11 989.293 -1404.88 cv
989.792 -1403.66 990.042 -1402.34 990.042 -1400.93 cv
990.042 -1398.76 989.585 -1396.89 988.673 -1395.3 cv
987.763 -1393.71 986.27 -1392.51 984.205 -1391.68 cv
984.205 -1391.58 li
985.202 -1391.3 986.031 -1390.88 986.686 -1390.31 cv
987.341 -1389.74 987.871 -1389.07 988.285 -1388.29 cv
988.701 -1387.52 989.001 -1386.67 989.19 -1385.74 cv
989.378 -1384.81 989.509 -1383.88 989.58 -1382.95 cv
989.612 -1382.36 989.647 -1381.67 989.684 -1380.88 cv
989.716 -1380.08 989.778 -1379.28 989.863 -1378.45 cv
989.948 -1377.62 990.088 -1376.84 990.276 -1376.09 cv
990.464 -1375.36 990.752 -1374.73 991.128 -1374.21 cv
983.013 -1374.21 li
982.568 -1375.38 982.29 -1376.78 982.186 -1378.4 cv
982.083 -1380.02 981.931 -1381.56 981.725 -1383.05 cv
981.447 -1384.98 980.863 -1386.39 979.965 -1387.29 cv
979.069 -1388.18 977.606 -1388.63 975.573 -1388.63 cv
967.458 -1388.63 li
967.458 -1374.21 li
959.343 -1374.21 li
959.343 -1411.11 li
cp
1006.47 -1411.11 mo
1021.87 -1386.36 li
1021.97 -1386.36 li
1021.97 -1411.11 li
1029.57 -1411.11 li
1029.57 -1374.21 li
1021.46 -1374.21 li
1006.11 -1398.92 li
1006.01 -1398.92 li
1006.01 -1374.21 li
998.41 -1374.21 li
998.41 -1411.11 li
cp
1055.21 -1396.18 mo
1056.66 -1396.18 1057.85 -1396.52 1058.78 -1397.21 cv
1059.71 -1397.9 1060.17 -1399.02 1060.17 -1400.57 cv
1060.17 -1401.43 1060.02 -1402.13 1059.71 -1402.69 cv
1059.4 -1403.24 1058.99 -1403.67 1058.47 -1403.98 cv
1057.95 -1404.29 1057.36 -1404.51 1056.69 -1404.62 cv
1056.01 -1404.75 1055.32 -1404.81 1054.6 -1404.81 cv
1046.99 -1404.81 li
1046.99 -1396.18 li
cp
1056.25 -1411.11 mo
1058 -1411.11 1059.6 -1410.96 1061.05 -1410.65 cv
1062.5 -1410.34 1063.74 -1409.83 1064.77 -1409.12 cv
1065.81 -1408.42 1066.61 -1407.48 1067.18 -1406.31 cv
1067.75 -1405.14 1068.03 -1403.69 1068.03 -1401.97 cv
1068.03 -1400.11 1067.61 -1398.55 1066.76 -1397.32 cv
1065.92 -1396.07 1064.67 -1395.05 1063.02 -1394.26 cv
1065.29 -1393.61 1066.99 -1392.46 1068.11 -1390.83 cv
1069.23 -1389.19 1069.79 -1387.22 1069.79 -1384.91 cv
1069.79 -1383.05 1069.43 -1381.44 1068.7 -1380.08 cv
1067.98 -1378.72 1067 -1377.6 1065.78 -1376.74 cv
1064.56 -1375.88 1063.16 -1375.24 1061.59 -1374.83 cv
1060.03 -1374.42 1058.42 -1374.21 1056.77 -1374.21 cv
1038.88 -1374.21 li
1038.88 -1411.11 li
cp
1055.68 -1380.52 mo
1056.47 -1380.52 1057.23 -1380.59 1057.95 -1380.75 cv
1058.68 -1380.91 1059.31 -1381.16 1059.87 -1381.52 cv
1060.41 -1381.89 1060.86 -1382.38 1061.18 -1382.99 cv
1061.51 -1383.62 1061.67 -1384.41 1061.67 -1385.37 cv
1061.67 -1387.27 1061.14 -1388.62 1060.07 -1389.43 cv
1059 -1390.24 1057.59 -1390.64 1055.83 -1390.64 cv
1046.99 -1390.64 li
1046.99 -1380.52 li
cp
1104.15 -1411.11 mo
1104.15 -1404.29 li
1084.66 -1404.29 li
1084.66 -1396.38 li
1102.55 -1396.38 li
1102.55 -1390.07 li
1084.66 -1390.07 li
1084.66 -1381.04 li
1104.56 -1381.04 li
1104.56 -1374.21 li
1076.55 -1374.21 li
1076.55 -1411.11 li
cp
1129.62 -1394.42 mo
1131.48 -1394.42 1132.88 -1394.83 1133.8 -1395.66 cv
1134.74 -1396.48 1135.2 -1397.83 1135.2 -1399.69 cv
1135.2 -1401.48 1134.74 -1402.78 1133.8 -1403.59 cv
1132.88 -1404.4 1131.48 -1404.81 1129.62 -1404.81 cv
1120.73 -1404.81 li
1120.73 -1394.42 li
cp
1132.51 -1411.11 mo
1134.17 -1411.11 1135.66 -1410.85 1136.99 -1410.31 cv
1138.31 -1409.78 1139.45 -1409.05 1140.39 -1408.11 cv
1141.34 -1407.19 1142.06 -1406.11 1142.56 -1404.88 cv
1143.06 -1403.66 1143.32 -1402.34 1143.32 -1400.93 cv
1143.32 -1398.76 1142.86 -1396.89 1141.95 -1395.3 cv
1141.03 -1393.71 1139.54 -1392.51 1137.47 -1391.68 cv
1137.47 -1391.58 li
1138.47 -1391.3 1139.3 -1390.88 1139.96 -1390.31 cv
1140.61 -1389.74 1141.14 -1389.07 1141.56 -1388.29 cv
1141.97 -1387.52 1142.27 -1386.67 1142.46 -1385.74 cv
1142.65 -1384.81 1142.78 -1383.88 1142.85 -1382.95 cv
1142.88 -1382.36 1142.92 -1381.67 1142.95 -1380.88 cv
1142.99 -1380.08 1143.04 -1379.28 1143.13 -1378.45 cv
1143.22 -1377.62 1143.36 -1376.84 1143.55 -1376.09 cv
1143.74 -1375.36 1144.02 -1374.73 1144.4 -1374.21 cv
1136.28 -1374.21 li
1135.84 -1375.38 1135.56 -1376.78 1135.46 -1378.4 cv
1135.36 -1380.02 1135.2 -1381.56 1134.99 -1383.05 cv
1134.72 -1384.98 1134.13 -1386.39 1133.24 -1387.29 cv
1132.34 -1388.18 1130.88 -1388.63 1128.84 -1388.63 cv
1120.73 -1388.63 li
1120.73 -1374.21 li
1112.61 -1374.21 li
1112.61 -1411.11 li
cp
1172.84 -1374.5 mo
1171.08 -1373.75 1169.31 -1373.39 1167.52 -1373.39 cv
1164.69 -1373.39 1162.15 -1373.87 1159.9 -1374.86 cv
1157.63 -1375.84 1155.73 -1377.19 1154.19 -1378.91 cv
1152.63 -1380.64 1151.44 -1382.66 1150.62 -1384.99 cv
1149.79 -1387.32 1149.37 -1389.82 1149.37 -1392.51 cv
1149.37 -1395.27 1149.79 -1397.82 1150.62 -1400.18 cv
1151.44 -1402.54 1152.63 -1404.6 1154.19 -1406.36 cv
1155.73 -1408.11 1157.63 -1409.49 1159.9 -1410.49 cv
1162.15 -1411.49 1164.69 -1411.99 1167.52 -1411.99 cv
1169.41 -1411.99 1171.25 -1411.71 1173.02 -1411.14 cv
1174.8 -1410.57 1176.4 -1409.73 1177.83 -1408.63 cv
1179.26 -1407.53 1180.44 -1406.17 1181.37 -1404.55 cv
1182.3 -1402.93 1182.86 -1401.07 1183.07 -1398.97 cv
1175.32 -1398.97 li
1174.84 -1401.03 1173.91 -1402.59 1172.53 -1403.62 cv
1171.15 -1404.65 1169.48 -1405.17 1167.52 -1405.17 cv
1165.69 -1405.17 1164.14 -1404.82 1162.87 -1404.11 cv
1161.59 -1403.4 1160.56 -1402.46 1159.77 -1401.27 cv
1158.97 -1400.08 1158.39 -1398.72 1158.03 -1397.21 cv
1157.67 -1395.69 1157.49 -1394.13 1157.49 -1392.51 cv
1157.49 -1390.96 1157.67 -1389.45 1158.03 -1387.98 cv
1158.39 -1386.52 1158.97 -1385.2 1159.77 -1384.03 cv
1160.56 -1382.86 1161.59 -1381.92 1162.87 -1381.21 cv
1164.14 -1380.5 1165.69 -1380.16 1167.52 -1380.16 cv
1170.21 -1380.16 1172.28 -1380.84 1173.75 -1382.2 cv
1175.21 -1383.56 1176.06 -1385.53 1176.3 -1388.11 cv
1168.14 -1388.11 li
1168.14 -1394.16 li
1183.64 -1394.16 li
1183.64 -1374.21 li
1178.47 -1374.21 li
1177.65 -1378.4 li
1176.2 -1376.54 1174.6 -1375.23 1172.84 -1374.5 cv
false sop
1 .80499 .305791 .158083 cmyk
f
581.703 -1432.85 mo
578.912 -1430.42 575.053 -1429.2 570.124 -1429.2 cv
565.13 -1429.2 561.262 -1430.41 558.522 -1432.82 cv
555.784 -1435.23 554.413 -1438.95 554.413 -1443.98 cv
554.413 -1466.93 li
562.528 -1466.93 li
562.528 -1443.98 li
562.528 -1442.99 562.613 -1442 562.787 -1441.04 cv
562.96 -1440.07 563.318 -1439.22 563.874 -1438.48 cv
564.421 -1437.74 565.188 -1437.13 566.171 -1436.67 cv
567.154 -1436.2 568.472 -1435.97 570.124 -1435.97 cv
573.021 -1435.97 575.019 -1436.62 576.121 -1437.91 cv
577.224 -1439.2 577.773 -1441.23 577.773 -1443.98 cv
577.773 -1466.93 li
585.888 -1466.93 li
585.888 -1443.98 li
585.888 -1438.99 584.494 -1435.27 581.703 -1432.85 cv
603.097 -1466.93 mo
618.498 -1442.17 li
618.601 -1442.17 li
618.601 -1466.93 li
626.198 -1466.93 li
626.198 -1430.03 li
618.087 -1430.03 li
602.734 -1454.73 li
602.631 -1454.73 li
602.631 -1430.03 li
595.035 -1430.03 li
595.035 -1466.93 li
cp
643.358 -1430.03 mo
635.241 -1430.03 li
635.241 -1466.93 li
643.358 -1466.93 li
cp
661.155 -1430.03 mo
649.215 -1466.93 li
657.533 -1466.93 li
665.754 -1440.99 li
665.855 -1440.99 li
674.174 -1466.93 li
682.549 -1466.93 li
670.302 -1430.03 li
cp
716.142 -1466.93 mo
716.142 -1460.11 li
696.655 -1460.11 li
696.655 -1452.2 li
714.537 -1452.2 li
714.537 -1445.89 li
696.655 -1445.89 li
696.655 -1436.85 li
716.556 -1436.85 li
716.556 -1430.03 li
688.542 -1430.03 li
688.542 -1466.93 li
cp
741.094 -1450.24 mo
742.952 -1450.24 744.347 -1450.65 745.277 -1451.47 cv
746.209 -1452.3 746.676 -1453.65 746.676 -1455.51 cv
746.676 -1457.3 746.209 -1458.6 745.277 -1459.41 cv
744.347 -1460.22 742.952 -1460.63 741.094 -1460.63 cv
732.203 -1460.63 li
732.203 -1450.24 li
cp
743.988 -1466.93 mo
745.64 -1466.93 747.128 -1466.66 748.456 -1466.13 cv
749.781 -1465.59 750.921 -1464.86 751.867 -1463.93 cv
752.813 -1463 753.539 -1461.92 754.037 -1460.7 cv
754.536 -1459.48 754.786 -1458.16 754.786 -1456.75 cv
754.786 -1454.58 754.329 -1452.7 753.42 -1451.11 cv
752.503 -1449.53 751.015 -1448.32 748.95 -1447.5 cv
748.95 -1447.4 li
749.947 -1447.12 750.776 -1446.7 751.43 -1446.13 cv
752.081 -1445.56 752.616 -1444.88 753.029 -1444.11 cv
753.445 -1443.34 753.746 -1442.48 753.934 -1441.55 cv
754.122 -1440.62 754.253 -1439.69 754.325 -1438.76 cv
754.357 -1438.18 754.391 -1437.49 754.428 -1436.7 cv
754.46 -1435.9 754.522 -1435.09 754.607 -1434.26 cv
754.692 -1433.44 754.832 -1432.65 755.021 -1431.91 cv
755.209 -1431.17 755.492 -1430.55 755.873 -1430.03 cv
747.758 -1430.03 li
747.307 -1431.2 747.034 -1432.6 746.931 -1434.22 cv
746.827 -1435.83 746.676 -1437.38 746.469 -1438.86 cv
746.191 -1440.8 745.608 -1442.21 744.712 -1443.1 cv
743.814 -1444 742.351 -1444.45 740.313 -1444.45 cv
732.203 -1444.45 li
732.203 -1430.03 li
724.087 -1430.03 li
724.087 -1466.93 li
cp
769.103 -1439.12 mo
769.551 -1438.26 770.144 -1437.57 770.888 -1437.03 cv
771.628 -1436.5 772.498 -1436.1 773.495 -1435.84 cv
774.494 -1435.58 775.528 -1435.45 776.594 -1435.45 cv
777.322 -1435.45 778.094 -1435.51 778.923 -1435.64 cv
779.747 -1435.75 780.524 -1435.99 781.247 -1436.33 cv
781.973 -1436.68 782.575 -1437.15 783.055 -1437.76 cv
783.54 -1438.36 783.781 -1439.12 783.781 -1440.06 cv
783.781 -1441.05 783.464 -1441.86 782.825 -1442.48 cv
782.185 -1443.1 781.351 -1443.62 780.317 -1444.03 cv
779.286 -1444.45 778.112 -1444.81 776.805 -1445.12 cv
775.496 -1445.43 774.168 -1445.78 772.822 -1446.15 cv
771.444 -1446.5 770.102 -1446.92 768.793 -1447.42 cv
767.484 -1447.92 766.312 -1448.57 765.277 -1449.36 cv
764.243 -1450.15 763.409 -1451.14 762.773 -1452.33 cv
762.13 -1453.52 761.817 -1454.96 761.817 -1456.64 cv
761.817 -1458.54 762.222 -1460.18 763.032 -1461.58 cv
763.841 -1462.97 764.9 -1464.14 766.209 -1465.07 cv
767.518 -1466 769 -1466.69 770.649 -1467.14 cv
772.305 -1467.58 773.961 -1467.81 775.613 -1467.81 cv
777.54 -1467.81 779.394 -1467.59 781.172 -1467.16 cv
782.947 -1466.73 784.523 -1466.03 785.899 -1465.07 cv
787.277 -1464.1 788.37 -1462.87 789.183 -1461.38 cv
789.99 -1459.88 790.394 -1458.05 790.394 -1455.92 cv
782.538 -1455.92 li
782.472 -1457.02 782.237 -1457.94 781.845 -1458.66 cv
781.445 -1459.38 780.919 -1459.95 780.264 -1460.37 cv
779.61 -1460.78 778.861 -1461.07 778.018 -1461.25 cv
777.173 -1461.42 776.254 -1461.5 775.252 -1461.5 cv
774.598 -1461.5 773.943 -1461.43 773.288 -1461.29 cv
772.634 -1461.16 772.041 -1460.92 771.508 -1460.57 cv
770.973 -1460.23 770.534 -1459.8 770.187 -1459.28 cv
769.843 -1458.76 769.673 -1458.11 769.673 -1457.31 cv
769.673 -1456.59 769.811 -1456.01 770.084 -1455.56 cv
770.36 -1455.11 770.902 -1454.7 771.713 -1454.32 cv
772.521 -1453.94 773.642 -1453.56 775.073 -1453.18 cv
776.5 -1452.8 778.372 -1452.32 780.678 -1451.73 cv
781.367 -1451.6 782.325 -1451.35 783.549 -1450.99 cv
784.769 -1450.62 785.984 -1450.05 787.192 -1449.25 cv
788.398 -1448.46 789.438 -1447.4 790.318 -1446.08 cv
791.198 -1444.75 791.637 -1443.05 791.637 -1440.99 cv
791.637 -1439.3 791.31 -1437.73 790.653 -1436.28 cv
789.999 -1434.83 789.025 -1433.58 787.734 -1432.53 cv
786.441 -1431.48 784.84 -1430.67 782.929 -1430.08 cv
781.018 -1429.5 778.801 -1429.2 776.286 -1429.2 cv
774.253 -1429.2 772.278 -1429.45 770.367 -1429.95 cv
768.456 -1430.45 766.769 -1431.24 765.306 -1432.3 cv
763.841 -1433.37 762.679 -1434.73 761.817 -1436.39 cv
760.956 -1438.04 760.542 -1440 760.575 -1442.28 cv
768.43 -1442.28 li
768.43 -1441.04 768.653 -1439.98 769.103 -1439.12 cv
806.826 -1430.03 mo
798.715 -1430.03 li
798.715 -1466.93 li
806.826 -1466.93 li
cp
813.341 -1460.11 mo
813.341 -1466.93 li
843.575 -1466.93 li
843.575 -1460.11 li
832.516 -1460.11 li
832.516 -1430.03 li
824.401 -1430.03 li
824.401 -1460.11 li
cp
859.181 -1471.07 mo
852.2 -1471.07 li
852.2 -1477.11 li
859.181 -1477.11 li
cp
869.828 -1471.07 mo
862.852 -1471.07 li
862.852 -1477.11 li
869.828 -1477.11 li
cp
865.746 -1444.29 mo
861.092 -1457.83 li
860.991 -1457.83 li
856.186 -1444.29 li
cp
865.28 -1466.93 mo
879.08 -1430.03 li
870.654 -1430.03 li
867.864 -1438.24 li
854.068 -1438.24 li
851.174 -1430.03 li
843.004 -1430.03 li
856.962 -1466.93 li
cp
878.303 -1460.11 mo
878.303 -1466.93 li
908.541 -1466.93 li
908.541 -1460.11 li
897.481 -1460.11 li
897.481 -1430.03 li
889.366 -1430.03 li
889.366 -1460.11 li
cp
f
580.254 -1523.43 mo
580.254 -1516.61 li
562.425 -1516.61 li
562.425 -1508.08 li
577.877 -1508.08 li
577.877 -1501.78 li
562.425 -1501.78 li
562.425 -1486.53 li
554.307 -1486.53 li
554.307 -1523.43 li
cp
603.851 -1506.74 mo
605.709 -1506.74 607.108 -1507.15 608.038 -1507.98 cv
608.966 -1508.81 609.432 -1510.15 609.432 -1512.01 cv
609.432 -1513.8 608.966 -1515.11 608.038 -1515.91 cv
607.108 -1516.72 605.709 -1517.13 603.851 -1517.13 cv
594.959 -1517.13 li
594.959 -1506.74 li
cp
606.745 -1523.43 mo
608.396 -1523.43 609.89 -1523.17 611.213 -1522.63 cv
612.54 -1522.1 613.682 -1521.37 614.624 -1520.44 cv
615.575 -1519.51 616.296 -1518.43 616.794 -1517.21 cv
617.297 -1515.98 617.548 -1514.66 617.548 -1513.25 cv
617.548 -1511.08 617.091 -1509.2 616.176 -1507.62 cv
615.264 -1506.04 613.776 -1504.83 611.706 -1504 cv
611.706 -1503.9 li
612.703 -1503.62 613.533 -1503.2 614.187 -1502.63 cv
614.842 -1502.06 615.377 -1501.39 615.79 -1500.62 cv
616.202 -1499.84 616.502 -1498.99 616.691 -1498.06 cv
616.884 -1497.13 617.01 -1496.2 617.081 -1495.27 cv
617.113 -1494.68 617.148 -1493.99 617.185 -1493.2 cv
617.221 -1492.41 617.279 -1491.6 617.364 -1490.77 cv
617.449 -1489.94 617.589 -1489.16 617.777 -1488.42 cv
617.966 -1487.68 618.253 -1487.05 618.629 -1486.53 cv
610.519 -1486.53 li
610.069 -1487.7 609.795 -1489.1 609.692 -1490.72 cv
609.589 -1492.34 609.432 -1493.89 609.226 -1495.37 cv
608.948 -1497.3 608.364 -1498.71 607.468 -1499.61 cv
606.57 -1500.5 605.107 -1500.95 603.074 -1500.95 cv
594.959 -1500.95 li
594.959 -1486.53 li
586.849 -1486.53 li
586.849 -1523.43 li
cp
634.614 -1486.53 mo
626.503 -1486.53 li
626.503 -1523.43 li
634.614 -1523.43 li
cp
671.517 -1523.43 mo
671.517 -1516.61 li
652.034 -1516.61 li
652.034 -1508.71 li
669.916 -1508.71 li
669.916 -1502.4 li
652.034 -1502.4 li
652.034 -1493.36 li
671.931 -1493.36 li
671.931 -1486.53 li
643.919 -1486.53 li
643.919 -1523.43 li
cp
694.815 -1493.36 mo
695.987 -1493.36 697.121 -1493.54 698.224 -1493.92 cv
699.329 -1494.3 700.305 -1494.93 701.166 -1495.81 cv
702.028 -1496.69 702.719 -1497.84 703.236 -1499.25 cv
703.75 -1500.66 704.012 -1502.38 704.012 -1504.42 cv
704.012 -1506.28 703.833 -1507.96 703.473 -1509.45 cv
703.11 -1510.95 702.512 -1512.24 701.688 -1513.3 cv
700.859 -1514.37 699.768 -1515.19 698.408 -1515.76 cv
697.046 -1516.33 695.367 -1516.61 693.366 -1516.61 cv
687.578 -1516.61 li
687.578 -1493.36 li
cp
695.38 -1523.43 mo
697.758 -1523.43 699.974 -1523.06 702.025 -1522.3 cv
704.074 -1521.54 705.848 -1520.4 707.345 -1518.89 cv
708.847 -1517.37 710.014 -1515.48 710.862 -1513.2 cv
711.705 -1510.93 712.128 -1508.26 712.128 -1505.19 cv
712.128 -1502.5 711.783 -1500.02 711.092 -1497.75 cv
710.405 -1495.47 709.364 -1493.51 707.968 -1491.85 cv
706.573 -1490.2 704.832 -1488.9 702.747 -1487.96 cv
700.661 -1487.01 698.206 -1486.53 695.38 -1486.53 cv
679.462 -1486.53 li
679.462 -1523.43 li
cp
735.713 -1506.74 mo
737.573 -1506.74 738.97 -1507.15 739.902 -1507.98 cv
740.83 -1508.81 741.297 -1510.15 741.297 -1512.01 cv
741.297 -1513.8 740.83 -1515.11 739.902 -1515.91 cv
738.97 -1516.72 737.573 -1517.13 735.713 -1517.13 cv
726.824 -1517.13 li
726.824 -1506.74 li
cp
738.609 -1523.43 mo
740.261 -1523.43 741.754 -1523.17 743.079 -1522.63 cv
744.407 -1522.1 745.542 -1521.37 746.492 -1520.44 cv
747.439 -1519.51 748.16 -1518.43 748.663 -1517.21 cv
749.162 -1515.98 749.412 -1514.66 749.412 -1513.25 cv
749.412 -1511.08 748.955 -1509.2 748.041 -1507.62 cv
747.129 -1506.04 745.636 -1504.83 743.571 -1504 cv
743.571 -1503.9 li
744.568 -1503.62 745.397 -1503.2 746.049 -1502.63 cv
746.704 -1502.06 747.241 -1501.39 747.655 -1500.62 cv
748.066 -1499.84 748.367 -1498.99 748.56 -1498.06 cv
748.748 -1497.13 748.874 -1496.2 748.946 -1495.27 cv
748.978 -1494.68 749.014 -1493.99 749.049 -1493.2 cv
749.081 -1492.41 749.143 -1491.6 749.228 -1490.77 cv
749.313 -1489.94 749.453 -1489.16 749.642 -1488.42 cv
749.83 -1487.68 750.117 -1487.05 750.494 -1486.53 cv
742.383 -1486.53 li
741.935 -1487.7 741.66 -1489.1 741.554 -1490.72 cv
741.451 -1492.34 741.297 -1493.89 741.09 -1495.37 cv
740.812 -1497.3 740.229 -1498.71 739.333 -1499.61 cv
738.435 -1500.5 736.971 -1500.95 734.941 -1500.95 cv
726.824 -1500.95 li
726.824 -1486.53 li
718.713 -1486.53 li
718.713 -1523.43 li
cp
765.707 -1486.53 mo
757.592 -1486.53 li
757.592 -1523.43 li
765.707 -1523.43 li
cp
798.098 -1513.59 mo
797.618 -1514.36 797.012 -1515.04 796.291 -1515.63 cv
795.567 -1516.22 794.747 -1516.67 793.835 -1517 cv
792.921 -1517.33 791.965 -1517.49 790.969 -1517.49 cv
789.143 -1517.49 787.59 -1517.14 786.317 -1516.43 cv
785.042 -1515.73 784.007 -1514.78 783.216 -1513.59 cv
782.422 -1512.4 781.845 -1511.05 781.484 -1509.53 cv
781.121 -1508.01 780.942 -1506.45 780.942 -1504.83 cv
780.942 -1503.28 781.121 -1501.77 781.484 -1500.31 cv
781.845 -1498.84 782.422 -1497.53 783.216 -1496.35 cv
784.007 -1495.18 785.042 -1494.24 786.317 -1493.54 cv
787.59 -1492.83 789.143 -1492.48 790.969 -1492.48 cv
793.449 -1492.48 795.388 -1493.23 796.778 -1494.75 cv
798.179 -1496.26 799.031 -1498.27 799.341 -1500.74 cv
807.197 -1500.74 li
806.99 -1498.44 806.455 -1496.35 805.593 -1494.49 cv
804.732 -1492.63 803.593 -1491.05 802.18 -1489.74 cv
800.767 -1488.43 799.116 -1487.43 797.219 -1486.74 cv
795.326 -1486.05 793.243 -1485.71 790.969 -1485.71 cv
788.143 -1485.71 785.598 -1486.2 783.343 -1487.18 cv
781.085 -1488.16 779.183 -1489.51 777.632 -1491.24 cv
776.084 -1492.96 774.894 -1494.98 774.065 -1497.31 cv
773.238 -1499.63 772.827 -1502.14 772.827 -1504.83 cv
772.827 -1507.58 773.238 -1510.15 774.065 -1512.5 cv
774.894 -1514.86 776.084 -1516.92 777.632 -1518.68 cv
779.183 -1520.44 781.085 -1521.81 783.343 -1522.81 cv
785.598 -1523.81 788.143 -1524.31 790.969 -1524.31 cv
793.001 -1524.31 794.922 -1524.02 796.729 -1523.43 cv
798.537 -1522.85 800.156 -1522 801.587 -1520.88 cv
803.018 -1519.76 804.199 -1518.37 805.127 -1516.72 cv
806.057 -1515.06 806.643 -1513.17 806.887 -1511.03 cv
799.031 -1511.03 li
798.891 -1511.96 798.583 -1512.81 798.098 -1513.59 cv
822.745 -1523.43 mo
822.745 -1509.27 li
837.68 -1509.27 li
837.68 -1523.43 li
845.795 -1523.43 li
845.795 -1486.53 li
837.68 -1486.53 li
837.68 -1502.45 li
822.745 -1502.45 li
822.745 -1486.53 li
814.63 -1486.53 li
814.63 -1523.43 li
cp
870.556 -1497.49 mo
855.001 -1497.49 li
855.001 -1503.79 li
870.556 -1503.79 li
cp
897.194 -1500.8 mo
892.543 -1514.34 li
892.439 -1514.34 li
887.634 -1500.8 li
cp
896.728 -1523.43 mo
910.528 -1486.53 li
902.103 -1486.53 li
899.312 -1494.75 li
885.512 -1494.75 li
882.62 -1486.53 li
874.454 -1486.53 li
888.406 -1523.43 li
cp
924.239 -1523.43 mo
924.239 -1493.36 li
942.224 -1493.36 li
942.224 -1486.53 li
916.123 -1486.53 li
916.123 -1523.43 li
cp
976.311 -1523.43 mo
976.311 -1516.61 li
956.826 -1516.61 li
956.826 -1508.71 li
974.708 -1508.71 li
974.708 -1502.4 li
956.826 -1502.4 li
956.826 -1493.36 li
976.726 -1493.36 li
976.726 -1486.53 li
948.715 -1486.53 li
948.715 -1523.43 li
cp
982.563 -1523.43 mo
991.972 -1523.43 li
999.207 -1511.65 li
1006.7 -1523.43 li
1015.59 -1523.43 li
1003.75 -1505.81 li
1016.62 -1486.53 li
1006.96 -1486.53 li
998.895 -1499.3 li
990.678 -1486.53 li
981.582 -1486.53 li
994.452 -1505.86 li
cp
1042.36 -1500.8 mo
1037.71 -1514.34 li
1037.6 -1514.34 li
1032.8 -1500.8 li
cp
1041.89 -1523.43 mo
1055.69 -1486.53 li
1047.27 -1486.53 li
1044.48 -1494.75 li
1030.68 -1494.75 li
1027.79 -1486.53 li
1019.62 -1486.53 li
1033.58 -1523.43 li
cp
1068.58 -1523.43 mo
1083.98 -1498.68 li
1084.08 -1498.68 li
1084.08 -1523.43 li
1091.68 -1523.43 li
1091.68 -1486.53 li
1083.57 -1486.53 li
1068.21 -1511.24 li
1068.11 -1511.24 li
1068.11 -1486.53 li
1060.52 -1486.53 li
1060.52 -1523.43 li
cp
1115.71 -1493.36 mo
1116.88 -1493.36 1118.02 -1493.54 1119.12 -1493.92 cv
1120.22 -1494.3 1121.21 -1494.93 1122.07 -1495.81 cv
1122.93 -1496.69 1123.61 -1497.84 1124.14 -1499.25 cv
1124.65 -1500.66 1124.91 -1502.38 1124.91 -1504.42 cv
1124.91 -1506.28 1124.73 -1507.96 1124.37 -1509.45 cv
1124.01 -1510.95 1123.41 -1512.24 1122.58 -1513.3 cv
1121.76 -1514.37 1120.66 -1515.19 1119.31 -1515.76 cv
1117.94 -1516.33 1116.26 -1516.61 1114.27 -1516.61 cv
1108.48 -1516.61 li
1108.48 -1493.36 li
cp
1116.28 -1523.43 mo
1118.66 -1523.43 1120.87 -1523.06 1122.92 -1522.3 cv
1124.97 -1521.54 1126.75 -1520.4 1128.25 -1518.89 cv
1129.74 -1517.37 1130.91 -1515.48 1131.76 -1513.2 cv
1132.6 -1510.93 1133.02 -1508.26 1133.02 -1505.19 cv
1133.02 -1502.5 1132.68 -1500.02 1131.99 -1497.75 cv
1131.3 -1495.47 1130.26 -1493.51 1128.87 -1491.85 cv
1127.47 -1490.2 1125.73 -1488.9 1123.65 -1487.96 cv
1121.56 -1487.01 1119.1 -1486.53 1116.28 -1486.53 cv
1100.36 -1486.53 li
1100.36 -1523.43 li
cp
1167.29 -1523.43 mo
1167.29 -1516.61 li
1147.81 -1516.61 li
1147.81 -1508.71 li
1165.69 -1508.71 li
1165.69 -1502.4 li
1147.81 -1502.4 li
1147.81 -1493.36 li
1167.7 -1493.36 li
1167.7 -1486.53 li
1139.69 -1486.53 li
1139.69 -1523.43 li
cp
1191.98 -1506.74 mo
1193.84 -1506.74 1195.24 -1507.15 1196.17 -1507.98 cv
1197.1 -1508.81 1197.56 -1510.15 1197.56 -1512.01 cv
1197.56 -1513.8 1197.1 -1515.11 1196.17 -1515.91 cv
1195.24 -1516.72 1193.84 -1517.13 1191.98 -1517.13 cv
1183.09 -1517.13 li
1183.09 -1506.74 li
cp
1194.88 -1523.43 mo
1196.53 -1523.43 1198.02 -1523.17 1199.35 -1522.63 cv
1200.68 -1522.1 1201.81 -1521.37 1202.76 -1520.44 cv
1203.71 -1519.51 1204.43 -1518.43 1204.93 -1517.21 cv
1205.43 -1515.98 1205.68 -1514.66 1205.68 -1513.25 cv
1205.68 -1511.08 1205.22 -1509.2 1204.31 -1507.62 cv
1203.4 -1506.04 1201.9 -1504.83 1199.84 -1504 cv
1199.84 -1503.9 li
1200.84 -1503.62 1201.66 -1503.2 1202.32 -1502.63 cv
1202.97 -1502.06 1203.51 -1501.39 1203.92 -1500.62 cv
1204.34 -1499.84 1204.64 -1498.99 1204.83 -1498.06 cv
1205.01 -1497.13 1205.15 -1496.2 1205.21 -1495.27 cv
1205.25 -1494.68 1205.28 -1493.99 1205.32 -1493.2 cv
1205.35 -1492.41 1205.41 -1491.6 1205.5 -1490.77 cv
1205.58 -1489.94 1205.72 -1489.16 1205.91 -1488.42 cv
1206.1 -1487.68 1206.38 -1487.05 1206.77 -1486.53 cv
1198.65 -1486.53 li
1198.2 -1487.7 1197.93 -1489.1 1197.82 -1490.72 cv
1197.72 -1492.34 1197.56 -1493.89 1197.36 -1495.37 cv
1197.08 -1497.3 1196.5 -1498.71 1195.6 -1499.61 cv
1194.71 -1500.5 1193.24 -1500.95 1191.21 -1500.95 cv
1183.09 -1500.95 li
1183.09 -1486.53 li
1174.98 -1486.53 li
1174.98 -1523.43 li
cp
f
grestore
gsave
-3.05176e-5 136.613 mo
504.262 136.613 li
504.262 .00109863 li
-3.05176e-5 .00109863 li
cp
clp
220.323 91.4894 mo
160.741 91.4894 li
164.404 94.5574 168.639 96.8564 173.125 98.4554 cv
207.906 98.4554 li
212.406 96.8564 216.654 94.5574 220.323 91.4894 cv
false sop
1 .80499 .305791 .158083 cmyk
f
54.5213 88.2899 mo
80.3443 88.2899 li
80.3853 88.1629 li
80.3143 88.1629 li
82.4523 81.3239 li
57.0913 81.3239 li
cp
f
53.3383 91.4894 mo
50.7653 98.4554 li
77.0753 98.4554 li
79.3163 91.4894 li
cp
f
24.657 91.4891 mo
-1.52588e-5 91.4891 li
-1.52588e-5 98.4551 li
24.657 98.4551 li
cp
f
24.657 81.3241 mo
-1.52588e-5 81.3241 li
-1.52588e-5 88.2901 li
24.657 88.2901 li
cp
f
24.657 71.157 mo
-1.52588e-5 71.157 li
-1.52588e-5 78.123 li
24.657 78.123 li
cp
f
24.657 60.9941 mo
-1.52588e-5 60.9941 li
-1.52588e-5 67.9591 li
24.657 67.9591 li
cp
f
24.657 30.4971 mo
-1.52588e-5 30.4971 li
-1.52588e-5 37.4631 li
24.657 37.4631 li
cp
f
24.657 20.3311 mo
-1.52588e-5 20.3311 li
-1.52588e-5 27.298 li
24.657 27.298 li
cp
f
.000976563 6.96704 mo
75.357 6.96704 li
75.357 6.10352e-5 li
.000976563 6.10352e-5 li
cp
f
.000976563 17.131 mo
75.357 17.131 li
75.357 10.165 li
.000976563 10.165 li
cp
f
98.1037 30.4977 mo
75.8667 30.4977 li
73.2937 37.4637 li
96.0146 37.4637 li
cp
f
84.5584 6.96765 mo
115.252 6.96765 li
112.62 .000671387 li
87.1324 .000671387 li
cp
f
80.8045 17.1311 mo
119.091 17.1311 li
116.459 10.1652 li
83.3765 10.1652 li
cp
f
101.246 27.2975 mo
122.934 27.2975 li
120.301 20.3305 li
79.6219 20.3305 li
77.0489 27.2975 li
99.0609 27.2975 li
100.015 24.1045 li
100.291 24.1045 li
cp
f
104.29 37.463 mo
126.773 37.463 li
124.141 30.498 li
102.206 30.498 li
cp
f
62.029 67.9587 mo
138.296 67.9587 li
135.663 60.9948 li
64.603 60.9948 li
cp
f
58.2752 78.1224 mo
142.136 78.1224 li
139.503 71.1565 li
60.8482 71.1565 li
cp
f
120.173 88.2899 mo
145.979 88.2899 li
143.345 81.3239 li
117.901 81.3239 li
cp
f
149.816 98.4552 mo
147.185 91.4893 li
121.128 91.4893 li
123.368 98.4552 li
cp
f
148.774 6.96704 mo
173.429 6.96704 li
173.429 6.10352e-5 li
148.774 6.10352e-5 li
cp
f
148.774 17.131 mo
173.429 17.131 li
173.429 10.165 li
148.774 10.165 li
cp
f
148.774 27.2971 mo
173.429 27.2971 li
173.429 20.3301 li
148.774 20.3301 li
cp
f
148.774 37.4631 mo
173.429 37.4631 li
173.429 30.4971 li
148.774 30.4971 li
cp
f
148.971 67.9587 mo
173.893 67.9587 li
173.58 66.1558 173.429 64.2288 173.429 62.2007 cv
173.429 60.9948 li
148.774 60.9948 li
148.774 64.2758 li
148.774 65.5547 148.871 66.7578 148.971 67.9587 cv
f
151.176 78.1224 mo
179.297 78.1224 li
177.107 76.3694 175.62 73.9885 174.688 71.1565 cv
149.376 71.1565 li
149.78 73.6404 150.365 75.9805 151.176 78.1224 cv
f
228.503 81.324 mo
152.573 81.324 li
153.897 83.9261 155.531 86.2371 157.387 88.29 cv
223.687 88.29 li
225.544 86.2371 227.182 83.9261 228.503 81.324 cv
f
231.705 71.1568 mo
206.387 71.1568 li
205.454 73.9879 203.953 76.3679 201.753 78.1228 cv
229.9 78.1228 li
230.713 75.9808 231.296 73.6408 231.705 71.1568 cv
f
207.647 6.96704 mo
232.304 6.96704 li
232.304 6.10352e-5 li
207.647 6.10352e-5 li
cp
f
207.647 17.131 mo
232.304 17.131 li
232.304 10.165 li
207.647 10.165 li
cp
f
207.647 27.2971 mo
232.304 27.2971 li
232.304 20.3301 li
207.647 20.3301 li
cp
f
207.647 37.4631 mo
232.304 37.4631 li
232.304 30.4971 li
207.647 30.4971 li
cp
f
232.304 64.2762 mo
232.304 60.9942 li
207.648 60.9942 li
207.648 62.2022 li
207.648 64.2282 207.499 66.1552 207.185 67.9592 cv
232.106 67.9592 li
232.204 66.7582 232.304 65.5552 232.304 64.2762 cv
f
107.332 47.6271 mo
130.613 47.6271 li
127.982 40.6612 li
105.248 40.6612 li
cp
.374792 .261021 .243992 0 cmyk
f
110.376 57.7932 mo
134.456 57.7932 li
131.823 50.8272 li
108.29 50.8272 li
cp
f
148.774 47.6271 mo
173.429 47.6271 li
173.429 40.6611 li
148.774 40.6611 li
cp
f
148.774 57.7931 mo
173.429 57.7931 li
173.429 50.8271 li
148.774 50.8271 li
cp
f
207.647 47.6271 mo
232.304 47.6271 li
232.304 40.6611 li
207.647 40.6611 li
cp
f
207.647 57.7931 mo
232.304 57.7931 li
232.304 50.8271 li
207.647 50.8271 li
cp
f
.000473022 50.8587 mo
.000473022 57.8217 li
89.9315 57.8217 li
92.0164 50.8587 li
cp
f
.000473022 40.6335 mo
.000473022 47.5986 li
92.9745 47.5986 li
95.0585 40.6335 li
cp
f
250.507 124.646 mo
250.507 122.004 li
262.213 122.004 li
262.213 124.646 li
257.933 124.646 li
257.933 136.291 li
254.79 136.291 li
254.79 124.646 li
cp
275.365 122.004 mo
275.365 124.646 li
267.821 124.646 li
267.821 127.708 li
274.745 127.708 li
274.745 130.149 li
267.821 130.149 li
267.821 133.651 li
275.525 133.651 li
275.525 136.291 li
264.68 136.291 li
264.68 122.004 li
cp
287.329 125.816 mo
287.141 125.516 286.907 125.252 286.627 125.026 cv
286.347 124.798 286.031 124.621 285.676 124.495 cv
285.324 124.369 284.954 124.305 284.566 124.305 cv
283.859 124.305 283.258 124.442 282.766 124.715 cv
282.272 124.988 281.872 125.356 281.565 125.816 cv
281.257 126.276 281.034 126.799 280.894 127.387 cv
280.754 127.974 280.685 128.58 280.685 129.207 cv
280.685 129.808 280.754 130.392 280.894 130.958 cv
281.034 131.526 281.257 132.037 281.565 132.49 cv
281.872 132.944 282.272 133.307 282.766 133.579 cv
283.258 133.854 283.859 133.991 284.566 133.991 cv
285.527 133.991 286.277 133.697 286.818 133.11 cv
287.358 132.523 287.689 131.75 287.809 130.79 cv
290.851 130.79 li
290.771 131.683 290.563 132.49 290.229 133.209 cv
289.896 133.93 289.455 134.543 288.909 135.051 cv
288.362 135.558 287.721 135.946 286.988 136.211 cv
286.255 136.479 285.447 136.613 284.566 136.613 cv
283.473 136.613 282.488 136.422 281.615 136.043 cv
280.74 135.66 280.004 135.137 279.404 134.47 cv
278.804 133.803 278.342 133.021 278.023 132.12 cv
277.702 131.219 277.543 130.247 277.543 129.207 cv
277.543 128.14 277.702 127.151 278.023 126.237 cv
278.342 125.321 278.804 124.526 279.404 123.845 cv
280.004 123.163 280.74 122.631 281.615 122.243 cv
282.488 121.858 283.473 121.665 284.566 121.665 cv
285.354 121.665 286.098 121.778 286.797 122.004 cv
287.498 122.231 288.125 122.561 288.678 122.995 cv
289.232 123.428 289.69 123.965 290.05 124.606 cv
290.41 125.245 290.637 125.98 290.731 126.806 cv
287.689 126.806 li
287.635 126.447 287.516 126.117 287.329 125.816 cv
296.772 122.004 mo
296.772 127.488 li
302.555 127.488 li
302.555 122.004 li
305.696 122.004 li
305.696 136.291 li
302.555 136.291 li
302.555 130.128 li
296.772 130.128 li
296.772 136.291 li
293.63 136.291 li
293.63 122.004 li
cp
312.422 122.004 mo
318.386 131.589 li
318.426 131.589 li
318.426 122.004 li
321.367 122.004 li
321.367 136.291 li
318.227 136.291 li
312.282 126.726 li
312.242 126.726 li
312.242 136.291 li
309.302 136.291 li
309.302 122.004 li
cp
328.211 136.291 mo
325.07 136.291 li
325.07 122.004 li
328.211 122.004 li
cp
334.106 132.77 mo
334.28 133.103 334.51 133.375 334.798 133.579 cv
335.083 133.788 335.421 133.941 335.807 134.042 cv
336.194 134.14 336.594 134.191 337.008 134.191 cv
337.288 134.191 337.588 134.167 337.909 134.122 cv
338.228 134.074 338.529 133.985 338.809 133.85 cv
339.09 133.717 339.323 133.535 339.509 133.3 cv
339.696 133.067 339.789 132.77 339.789 132.41 cv
339.789 132.023 339.666 131.71 339.419 131.469 cv
339.173 131.229 338.849 131.029 338.449 130.868 cv
338.049 130.71 337.595 130.569 337.089 130.449 cv
336.582 130.327 336.067 130.196 335.547 130.048 cv
335.014 129.914 334.494 129.751 333.987 129.558 cv
333.479 129.363 333.025 129.115 332.625 128.807 cv
332.225 128.5 331.903 128.118 331.655 127.656 cv
331.407 127.198 331.285 126.64 331.285 125.986 cv
331.285 125.252 331.441 124.614 331.756 124.076 cv
332.068 123.534 332.478 123.084 332.986 122.724 cv
333.493 122.365 334.066 122.097 334.706 121.924 cv
335.347 121.75 335.988 121.665 336.627 121.665 cv
337.374 121.665 338.092 121.747 338.779 121.913 cv
339.467 122.08 340.076 122.35 340.611 122.724 cv
341.144 123.098 341.567 123.573 341.881 124.156 cv
342.194 124.736 342.351 125.439 342.351 126.266 cv
339.309 126.266 li
339.283 125.839 339.192 125.487 339.039 125.205 cv
338.886 124.925 338.683 124.706 338.429 124.545 cv
338.175 124.385 337.885 124.272 337.559 124.204 cv
337.231 124.138 336.875 124.105 336.488 124.105 cv
336.235 124.105 335.982 124.131 335.728 124.185 cv
335.474 124.239 335.244 124.333 335.037 124.465 cv
334.831 124.599 334.66 124.765 334.527 124.965 cv
334.394 125.165 334.326 125.419 334.326 125.726 cv
334.326 126.006 334.38 126.234 334.487 126.407 cv
334.593 126.579 334.803 126.741 335.117 126.886 cv
335.431 127.034 335.865 127.18 336.417 127.326 cv
336.971 127.473 337.695 127.659 338.588 127.887 cv
338.855 127.941 339.226 128.038 339.699 128.177 cv
340.173 128.317 340.643 128.54 341.11 128.848 cv
341.578 129.155 341.982 129.565 342.322 130.079 cv
342.661 130.592 342.832 131.248 342.832 132.049 cv
342.832 132.704 342.705 133.31 342.451 133.87 cv
342.198 134.43 341.821 134.913 341.322 135.321 cv
340.82 135.728 340.201 136.046 339.46 136.272 cv
338.72 136.498 337.862 136.613 336.888 136.613 cv
336.101 136.613 335.337 136.515 334.597 136.322 cv
333.856 136.128 333.203 135.826 332.636 135.412 cv
332.068 134.997 331.618 134.47 331.285 133.83 cv
330.951 133.19 330.792 132.429 330.804 131.549 cv
333.846 131.549 li
333.846 132.03 333.932 132.436 334.106 132.77 cv
354.682 125.816 mo
354.494 125.516 354.261 125.252 353.981 125.026 cv
353.702 124.798 353.384 124.621 353.031 124.495 cv
352.677 124.369 352.307 124.305 351.921 124.305 cv
351.213 124.305 350.612 124.442 350.12 124.715 cv
349.626 124.988 349.226 125.356 348.92 125.816 cv
348.611 126.276 348.388 126.799 348.249 127.387 cv
348.108 127.974 348.038 128.58 348.038 129.207 cv
348.038 129.808 348.108 130.392 348.249 130.958 cv
348.388 131.526 348.611 132.037 348.92 132.49 cv
349.226 132.944 349.626 133.307 350.12 133.579 cv
350.612 133.854 351.213 133.991 351.921 133.991 cv
352.882 133.991 353.631 133.697 354.173 133.11 cv
354.711 132.523 355.042 131.75 355.162 130.79 cv
358.204 130.79 li
358.124 131.683 357.918 132.49 357.584 133.209 cv
357.251 133.93 356.81 134.543 356.263 135.051 cv
355.716 135.558 355.075 135.946 354.342 136.211 cv
353.608 136.479 352.802 136.613 351.921 136.613 cv
350.827 136.613 349.843 136.422 348.969 136.043 cv
348.095 135.66 347.359 135.137 346.758 134.47 cv
346.157 133.803 345.697 133.021 345.376 132.12 cv
345.057 131.219 344.896 130.247 344.896 129.207 cv
344.896 128.14 345.057 127.151 345.376 126.237 cv
345.697 125.321 346.157 124.526 346.758 123.845 cv
347.359 123.163 348.095 122.631 348.969 122.243 cv
349.843 121.858 350.827 121.665 351.921 121.665 cv
352.708 121.665 353.451 121.778 354.151 122.004 cv
354.852 122.231 355.48 122.561 356.033 122.995 cv
356.587 123.428 357.043 123.965 357.405 124.606 cv
357.764 125.245 357.992 125.98 358.084 126.806 cv
355.042 126.806 li
354.99 126.447 354.869 126.117 354.682 125.816 cv
364.226 122.004 mo
364.226 127.488 li
370.008 127.488 li
370.008 122.004 li
373.151 122.004 li
373.151 136.291 li
370.008 136.291 li
370.008 130.128 li
364.226 130.128 li
364.226 136.291 li
361.083 136.291 li
361.083 122.004 li
cp
387.342 122.004 mo
387.342 124.646 li
379.796 124.646 li
379.796 127.708 li
386.721 127.708 li
386.721 130.149 li
379.796 130.149 li
379.796 133.651 li
387.501 133.651 li
387.501 136.291 li
376.655 136.291 li
376.655 122.004 li
cp
406.111 122.004 mo
406.111 124.646 li
399.208 124.646 li
399.208 127.947 li
405.19 127.947 li
405.19 130.389 li
399.208 130.389 li
399.208 136.291 li
396.065 136.291 li
396.065 122.004 li
cp
414.893 130.769 mo
413.092 125.526 li
413.052 125.526 li
411.192 130.769 li
cp
414.714 122.004 mo
420.056 136.291 li
416.795 136.291 li
415.714 133.11 li
410.371 133.11 li
409.251 136.291 li
406.088 136.291 li
411.492 122.004 li
cp
425.367 122.004 mo
425.367 127.927 li
430.949 122.004 li
434.871 122.004 li
429.289 127.648 li
435.413 136.291 li
431.469 136.291 li
427.167 129.868 li
425.367 131.689 li
425.367 136.291 li
422.224 136.291 li
422.224 122.004 li
cp
447.85 135.202 mo
446.769 136.141 445.275 136.613 443.368 136.613 cv
441.433 136.613 439.936 136.145 438.875 135.21 cv
437.815 134.278 437.284 132.836 437.284 130.889 cv
437.284 122.004 li
440.426 122.004 li
440.426 130.889 li
440.426 131.276 440.459 131.656 440.527 132.03 cv
440.593 132.403 440.733 132.733 440.947 133.021 cv
441.16 133.307 441.456 133.54 441.837 133.721 cv
442.217 133.901 442.727 133.991 443.368 133.991 cv
444.489 133.991 445.263 133.741 445.689 133.241 cv
446.117 132.74 446.329 131.955 446.329 130.889 cv
446.329 122.004 li
449.471 122.004 li
449.471 130.889 li
449.471 132.824 448.932 134.26 447.85 135.202 cv
456.04 122.004 mo
456.04 133.651 li
463.004 133.651 li
463.004 136.291 li
452.9 136.291 li
452.9 122.004 li
cp
462.489 124.646 mo
462.489 122.004 li
474.195 122.004 li
474.195 124.646 li
469.913 124.646 li
469.913 136.291 li
466.771 136.291 li
466.771 124.646 li
cp
480.097 120.404 mo
477.396 120.404 li
477.396 118.06 li
480.097 118.06 li
cp
484.219 120.404 mo
481.516 120.404 li
481.516 118.06 li
484.219 118.06 li
cp
482.638 130.769 mo
480.838 125.526 li
480.798 125.526 li
478.935 130.769 li
cp
482.457 122.004 mo
487.802 136.291 li
484.539 136.291 li
483.458 133.11 li
478.115 133.11 li
476.996 136.291 li
473.834 136.291 li
479.236 122.004 li
cp
487.338 124.646 mo
487.338 122.004 li
499.045 122.004 li
499.045 124.646 li
494.762 124.646 li
494.762 136.291 li
491.622 136.291 li
491.622 124.646 li
cp
f
262.315 84.1537 mo
262.315 86.7958 li
254.769 86.7958 li
254.769 89.8568 li
261.693 89.8568 li
261.693 92.2988 li
254.769 92.2988 li
254.769 95.7998 li
262.474 95.7998 li
262.474 98.4418 li
251.628 98.4418 li
251.628 84.1537 li
cp
271.976 90.6178 mo
272.696 90.6178 273.237 90.4578 273.596 90.1388 cv
273.956 89.8168 274.138 89.2968 274.138 88.5768 cv
274.138 87.8828 273.956 87.3778 273.596 87.0648 cv
273.237 86.7508 272.696 86.5948 271.976 86.5948 cv
268.535 86.5948 li
268.535 90.6178 li
cp
273.097 84.1537 mo
273.737 84.1537 274.315 84.2558 274.827 84.4648 cv
275.34 84.6698 275.78 84.9548 276.148 85.3138 cv
276.515 85.6738 276.796 86.0928 276.989 86.5648 cv
277.181 87.0388 277.279 87.5498 277.279 88.0968 cv
277.279 88.9358 277.102 89.6638 276.748 90.2768 cv
276.396 90.8898 275.818 91.3578 275.018 91.6768 cv
275.018 91.7168 li
275.404 91.8248 275.725 91.9888 275.978 92.2088 cv
276.231 92.4297 276.438 92.6878 276.598 92.9888 cv
276.759 93.2898 276.876 93.6198 276.949 93.9788 cv
277.022 94.3378 277.072 94.6998 277.099 95.0598 cv
277.112 95.2868 277.125 95.5547 277.139 95.8598 cv
277.152 96.1678 277.176 96.4808 277.21 96.7998 cv
277.243 97.1208 277.295 97.4238 277.369 97.7118 cv
277.442 97.9988 277.552 98.2418 277.699 98.4418 cv
274.557 98.4418 li
274.383 97.9878 274.277 97.4478 274.237 96.8208 cv
274.197 96.1938 274.138 95.5938 274.058 95.0198 cv
273.951 94.2718 273.724 93.7248 273.376 93.3778 cv
273.03 93.0328 272.463 92.8578 271.675 92.8578 cv
268.535 92.8578 li
268.535 98.4418 li
265.392 98.4418 li
265.392 84.1537 li
cp
283.259 84.1537 mo
283.259 95.7998 li
290.223 95.7998 li
290.223 98.4418 li
280.118 98.4418 li
280.118 84.1537 li
cp
300.33 92.9198 mo
298.528 87.6748 li
298.488 87.6748 li
296.628 92.9198 li
cp
300.15 84.1537 mo
305.492 98.4418 li
302.23 98.4418 li
301.151 95.2608 li
295.808 95.2608 li
294.686 98.4418 li
291.524 98.4418 li
296.928 84.1537 li
cp
310.395 84.1537 mo
316.358 93.7398 li
316.398 93.7398 li
316.398 84.1537 li
319.341 84.1537 li
319.341 98.4418 li
316.199 98.4418 li
310.254 88.8768 li
310.214 88.8768 li
310.214 98.4418 li
307.273 98.4418 li
307.273 84.1537 li
cp
331.048 98.3328 mo
330.366 98.6188 329.68 98.7608 328.985 98.7608 cv
327.891 98.7608 326.908 98.5718 326.034 98.1908 cv
325.161 97.8108 324.423 97.2878 323.823 96.6208 cv
323.222 95.9538 322.762 95.1688 322.442 94.2688 cv
322.123 93.3688 321.962 92.3988 321.962 91.3578 cv
321.962 90.2917 322.123 89.2988 322.442 88.3858 cv
322.762 87.4718 323.222 86.6738 323.823 85.9948 cv
324.423 85.3138 325.161 84.7808 326.034 84.3938 cv
326.908 84.0058 327.891 83.8138 328.985 83.8138 cv
329.72 83.8138 330.43 83.9228 331.117 84.1438 cv
331.804 84.3638 332.425 84.6868 332.979 85.1148 cv
333.532 85.5417 333.988 86.0677 334.349 86.6948 cv
334.708 87.3218 334.929 88.0428 335.009 88.8558 cv
332.007 88.8558 li
331.821 88.0547 331.461 87.4557 330.927 87.0547 cv
330.393 86.6548 329.746 86.4557 328.985 86.4557 cv
328.279 86.4557 327.679 86.5908 327.184 86.8658 cv
326.69 87.1378 326.29 87.5068 325.983 87.9648 cv
325.677 88.4268 325.454 88.9498 325.315 89.5368 cv
325.173 90.1238 325.103 90.7308 325.103 91.3578 cv
325.103 91.9588 325.173 92.5428 325.315 93.1088 cv
325.454 93.6748 325.677 94.1848 325.983 94.6388 cv
326.29 95.0928 326.69 95.4568 327.184 95.7298 cv
327.679 96.0038 328.279 96.1398 328.985 96.1398 cv
330.026 96.1398 330.831 95.8758 331.397 95.3498 cv
331.964 94.8228 332.294 94.0588 332.388 93.0578 cv
329.225 93.0578 li
329.225 90.7168 li
335.229 90.7168 li
335.229 98.4418 li
333.228 98.4418 li
332.908 96.8208 li
332.348 97.5417 331.727 98.0448 331.048 98.3328 cv
348.997 84.1537 mo
348.997 86.7958 li
341.453 86.7958 li
341.453 89.8568 li
348.377 89.8568 li
348.377 92.2988 li
341.453 92.2988 li
341.453 95.7998 li
349.157 95.7998 li
349.157 98.4418 li
338.311 98.4418 li
338.311 84.1537 li
cp
355.397 84.1537 mo
361.36 93.7398 li
361.4 93.7398 li
361.4 84.1537 li
364.341 84.1537 li
364.341 98.4418 li
361.199 98.4418 li
355.257 88.8768 li
355.217 88.8768 li
355.217 98.4418 li
352.274 98.4418 li
352.274 84.1537 li
cp
373.93 94.1998 mo
367.906 94.1998 li
367.906 91.7578 li
373.93 91.7578 li
cp
380.663 84.1537 mo
386.626 93.7398 li
386.666 93.7398 li
386.666 84.1537 li
389.608 84.1537 li
389.608 98.4418 li
386.466 98.4418 li
380.523 88.8768 li
380.483 88.8768 li
380.483 98.4418 li
377.541 98.4418 li
377.541 84.1537 li
cp
398.429 82.5518 mo
395.727 82.5518 li
395.727 80.2098 li
398.429 80.2098 li
cp
402.551 82.5518 mo
399.849 82.5518 li
399.849 80.2098 li
402.551 80.2098 li
cp
403.613 97.3508 mo
402.531 98.2928 401.037 98.7608 399.13 98.7608 cv
397.195 98.7608 395.697 98.2958 394.637 97.3608 cv
393.577 96.4268 393.047 94.9868 393.047 93.0388 cv
393.047 84.1537 li
396.187 84.1537 li
396.187 93.0388 li
396.187 93.4248 396.221 93.8058 396.288 94.1808 cv
396.355 94.5538 396.495 94.8838 396.707 95.1688 cv
396.921 95.4568 397.218 95.6898 397.599 95.8708 cv
397.979 96.0498 398.489 96.1398 399.13 96.1398 cv
400.25 96.1398 401.025 95.8888 401.451 95.3898 cv
401.878 94.8888 402.092 94.1058 402.092 93.0388 cv
402.092 84.1537 li
405.232 84.1537 li
405.232 93.0388 li
405.232 94.9718 404.693 96.4108 403.613 97.3508 cv
415.044 90.6178 mo
415.765 90.6178 416.304 90.4578 416.665 90.1388 cv
417.026 89.8168 417.205 89.2968 417.205 88.5768 cv
417.205 87.8828 417.026 87.3778 416.665 87.0648 cv
416.304 86.7508 415.765 86.5948 415.044 86.5948 cv
411.602 86.5948 li
411.602 90.6178 li
cp
416.165 84.1537 mo
416.806 84.1537 417.382 84.2558 417.896 84.4648 cv
418.41 84.6698 418.85 84.9548 419.217 85.3138 cv
419.585 85.6738 419.864 86.0928 420.057 86.5648 cv
420.252 87.0388 420.347 87.5498 420.347 88.0968 cv
420.347 88.9358 420.17 89.6638 419.817 90.2768 cv
419.464 90.8898 418.887 91.3578 418.086 91.6768 cv
418.086 91.7168 li
418.474 91.8248 418.793 91.9888 419.046 92.2088 cv
419.3 92.4297 419.507 92.6878 419.666 92.9888 cv
419.826 93.2898 419.944 93.6198 420.017 93.9788 cv
420.09 94.3378 420.141 94.6998 420.167 95.0598 cv
420.181 95.2868 420.194 95.5547 420.207 95.8598 cv
420.221 96.1678 420.243 96.4808 420.277 96.7998 cv
420.31 97.1208 420.364 97.4238 420.438 97.7118 cv
420.511 97.9988 420.622 98.2418 420.768 98.4418 cv
417.626 98.4418 li
417.452 97.9878 417.345 97.4478 417.305 96.8208 cv
417.265 96.1938 417.205 95.5938 417.125 95.0198 cv
417.019 94.2718 416.792 93.7248 416.445 93.3778 cv
416.099 93.0328 415.531 92.8578 414.743 92.8578 cv
411.602 92.8578 li
411.602 98.4418 li
408.46 98.4418 li
408.46 84.1537 li
cp
426.709 84.1537 mo
432.673 93.7398 li
432.712 93.7398 li
432.712 84.1537 li
435.653 84.1537 li
435.653 98.4418 li
432.513 98.4418 li
426.568 88.8768 li
426.528 88.8768 li
426.528 98.4418 li
423.588 98.4418 li
423.588 84.1537 li
cp
445.582 89.9368 mo
446.142 89.9368 446.603 89.8047 446.962 89.5368 cv
447.322 89.2698 447.503 88.8368 447.503 88.2358 cv
447.503 87.9028 447.442 87.6298 447.322 87.4158 cv
447.202 87.2028 447.043 87.0358 446.842 86.9158 cv
446.643 86.7958 446.412 86.7108 446.153 86.6658 cv
445.892 86.6188 445.622 86.5948 445.342 86.5948 cv
442.399 86.5948 li
442.399 89.9368 li
cp
445.982 84.1537 mo
446.662 84.1537 447.282 84.2148 447.842 84.3328 cv
448.403 84.4548 448.883 84.6508 449.283 84.9228 cv
449.684 85.1978 449.994 85.5608 450.214 86.0138 cv
450.434 86.4698 450.544 87.0287 450.544 87.6958 cv
450.544 88.4167 450.382 89.0158 450.054 89.4968 cv
449.727 89.9768 449.243 90.3708 448.604 90.6768 cv
449.483 90.9297 450.141 91.3748 450.574 92.0068 cv
451.009 92.6408 451.225 93.4058 451.225 94.2998 cv
451.225 95.0198 451.085 95.6428 450.804 96.1698 cv
450.525 96.6978 450.147 97.1278 449.675 97.4618 cv
449.201 97.7948 448.66 98.0417 448.053 98.2018 cv
447.446 98.3618 446.823 98.4418 446.182 98.4418 cv
439.259 98.4418 li
439.259 84.1537 li
cp
445.761 96.0008 mo
446.068 96.0008 446.362 95.9688 446.643 95.9108 cv
446.922 95.8498 447.168 95.7508 447.384 95.6098 cv
447.596 95.4698 447.766 95.2798 447.893 95.0398 cv
448.019 94.7988 448.083 94.4928 448.083 94.1198 cv
448.083 93.3848 447.875 92.8618 447.463 92.5498 cv
447.049 92.2348 446.502 92.0778 445.823 92.0778 cv
442.399 92.0778 li
442.399 96.0008 li
cp
464.53 84.1537 mo
464.53 86.7958 li
456.985 86.7958 li
456.985 89.8568 li
463.91 89.8568 li
463.91 92.2988 li
456.985 92.2988 li
456.985 95.7998 li
464.691 95.7998 li
464.691 98.4418 li
453.844 98.4418 li
453.844 84.1537 li
cp
474.393 90.6178 mo
475.112 90.6178 475.653 90.4578 476.012 90.1388 cv
476.373 89.8168 476.553 89.2968 476.553 88.5768 cv
476.553 87.8828 476.373 87.3778 476.012 87.0648 cv
475.653 86.7508 475.112 86.5948 474.393 86.5948 cv
470.951 86.5948 li
470.951 90.6178 li
cp
475.513 84.1537 mo
476.153 84.1537 476.73 84.2558 477.244 84.4648 cv
477.756 84.6698 478.197 84.9548 478.564 85.3138 cv
478.93 85.6738 479.212 86.0928 479.405 86.5648 cv
479.597 87.0388 479.695 87.5498 479.695 88.0968 cv
479.695 88.9358 479.517 89.6638 479.164 90.2768 cv
478.811 90.8898 478.234 91.3578 477.435 91.6768 cv
477.435 91.7168 li
477.82 91.8248 478.141 91.9888 478.395 92.2088 cv
478.647 92.4297 478.854 92.6878 479.014 92.9888 cv
479.175 93.2898 479.292 93.6198 479.365 93.9788 cv
479.438 94.3378 479.487 94.6998 479.516 95.0598 cv
479.527 95.2868 479.541 95.5547 479.555 95.8598 cv
479.567 96.1678 479.591 96.4808 479.625 96.7998 cv
479.659 97.1208 479.711 97.4238 479.784 97.7118 cv
479.858 97.9988 479.967 98.2418 480.115 98.4418 cv
476.973 98.4418 li
476.8 97.9878 476.694 97.4478 476.654 96.8208 cv
476.614 96.1938 476.553 95.5938 476.474 95.0198 cv
476.365 94.2718 476.139 93.7248 475.793 93.3778 cv
475.445 93.0328 474.879 92.8578 474.091 92.8578 cv
470.951 92.8578 li
470.951 98.4418 li
467.808 98.4418 li
467.808 84.1537 li
cp
491.127 98.3328 mo
490.447 98.6188 489.759 98.7608 489.066 98.7608 cv
487.971 98.7608 486.988 98.5718 486.114 98.1908 cv
485.24 97.8108 484.502 97.2878 483.903 96.6208 cv
483.303 95.9538 482.843 95.1688 482.522 94.2688 cv
482.202 93.3688 482.042 92.3988 482.042 91.3578 cv
482.042 90.2917 482.202 89.2988 482.522 88.3858 cv
482.843 87.4718 483.303 86.6738 483.903 85.9948 cv
484.502 85.3138 485.24 84.7808 486.114 84.3938 cv
486.988 84.0058 487.971 83.8138 489.066 83.8138 cv
489.799 83.8138 490.51 83.9228 491.197 84.1438 cv
491.884 84.3638 492.504 84.6868 493.058 85.1148 cv
493.612 85.5417 494.069 86.0677 494.429 86.6948 cv
494.788 87.3218 495.009 88.0428 495.089 88.8558 cv
492.087 88.8558 li
491.901 88.0547 491.54 87.4557 491.007 87.0547 cv
490.474 86.6548 489.826 86.4557 489.066 86.4557 cv
488.358 86.4557 487.758 86.5908 487.264 86.8658 cv
486.771 87.1378 486.371 87.5068 486.064 87.9648 cv
485.757 88.4268 485.533 88.9498 485.395 89.5368 cv
485.254 90.1238 485.185 90.7308 485.185 91.3578 cv
485.185 91.9588 485.254 92.5428 485.395 93.1088 cv
485.533 93.6748 485.757 94.1848 486.064 94.6388 cv
486.371 95.0928 486.771 95.4568 487.264 95.7298 cv
487.758 96.0038 488.358 96.1398 489.066 96.1398 cv
490.108 96.1398 490.91 95.8758 491.478 95.3498 cv
492.044 94.8228 492.375 94.0588 492.468 93.0578 cv
489.306 93.0578 li
489.306 90.7168 li
495.31 90.7168 li
495.31 98.4418 li
493.308 98.4418 li
492.988 96.8208 li
492.428 97.5417 491.808 98.0448 491.127 98.3328 cv
1 .80499 .305791 .158083 cmyk
f
262.236 75.7391 mo
261.154 76.6791 259.66 77.1501 257.753 77.1501 cv
255.818 77.1501 254.32 76.6822 253.26 75.7482 cv
252.2 74.8152 251.669 73.3732 251.669 71.4261 cv
251.669 62.5411 li
254.81 62.5411 li
254.81 71.4261 li
254.81 71.8132 254.844 72.1942 254.911 72.5671 cv
254.979 72.9412 255.117 73.2712 255.331 73.5572 cv
255.544 73.8442 255.841 74.0771 256.222 74.2571 cv
256.603 74.4382 257.112 74.5281 257.753 74.5281 cv
258.873 74.5281 259.648 74.2781 260.074 73.7781 cv
260.502 73.2781 260.715 72.4922 260.715 71.4261 cv
260.715 62.5411 li
263.856 62.5411 li
263.856 71.4261 li
263.856 73.3611 263.317 74.7992 262.236 75.7391 cv
270.52 62.5411 mo
276.483 72.1282 li
276.523 72.1282 li
276.523 62.5411 li
279.465 62.5411 li
279.465 76.8282 li
276.324 76.8282 li
270.379 67.2642 li
270.339 67.2642 li
270.339 76.8282 li
267.398 76.8282 li
267.398 62.5411 li
cp
286.109 76.8282 mo
282.966 76.8282 li
282.966 62.5402 li
286.109 62.5402 li
cp
292.999 76.8282 mo
288.376 62.5411 li
291.598 62.5411 li
294.781 72.5862 li
294.82 72.5862 li
298.041 62.5411 li
301.283 62.5411 li
296.541 76.8282 li
cp
314.291 62.5411 mo
314.291 65.1832 li
306.747 65.1832 li
306.747 68.2441 li
313.671 68.2441 li
313.671 70.6862 li
306.747 70.6862 li
306.747 74.1882 li
314.452 74.1882 li
314.452 76.8282 li
303.605 76.8282 li
303.605 62.5411 li
cp
323.952 69.0042 mo
324.673 69.0042 325.212 68.8452 325.574 68.5251 cv
325.933 68.2042 326.113 67.6841 326.113 66.9632 cv
326.113 66.2701 325.933 65.7662 325.574 65.4521 cv
325.212 65.1392 324.673 64.9822 323.952 64.9822 cv
320.51 64.9822 li
320.51 69.0042 li
cp
325.073 62.5411 mo
325.713 62.5411 326.29 62.6451 326.804 62.8512 cv
327.318 63.0582 327.758 63.3412 328.125 63.7012 cv
328.491 64.0612 328.771 64.4792 328.965 64.9521 cv
329.158 65.4261 329.255 65.9372 329.255 66.4842 cv
329.255 67.3242 329.078 68.0511 328.726 68.6642 cv
328.371 69.2781 327.795 69.7441 326.994 70.0662 cv
326.994 70.1061 li
327.381 70.2122 327.701 70.3752 327.954 70.5952 cv
328.207 70.8162 328.414 71.0752 328.575 71.3752 cv
328.735 71.6761 328.851 72.0062 328.925 72.3672 cv
328.998 72.7272 329.048 73.0862 329.075 73.4482 cv
329.088 73.6742 329.102 73.9412 329.115 74.2491 cv
329.128 74.5541 329.152 74.8691 329.185 75.1882 cv
329.218 75.5082 329.273 75.8122 329.345 76.0992 cv
329.418 76.3852 329.528 76.6282 329.675 76.8282 cv
326.534 76.8282 li
326.36 76.3752 326.253 75.8362 326.213 75.2092 cv
326.173 74.5822 326.113 73.9811 326.033 73.4081 cv
325.926 72.6612 325.7 72.1141 325.354 71.7662 cv
325.005 71.4192 324.439 71.2472 323.652 71.2472 cv
320.51 71.2472 li
320.51 76.8282 li
317.368 76.8282 li
317.368 62.5411 li
cp
334.798 73.3072 mo
334.971 73.6412 335.202 73.9122 335.489 74.1172 cv
335.775 74.3252 336.112 74.4781 336.5 74.5792 cv
336.886 74.6782 337.286 74.7281 337.7 74.7281 cv
337.981 74.7281 338.28 74.7051 338.6 74.6592 cv
338.92 74.6122 339.22 74.5212 339.502 74.3882 cv
339.781 74.2542 340.014 74.0712 340.201 73.8392 cv
340.388 73.6042 340.481 73.3072 340.481 72.9482 cv
340.481 72.5602 340.358 72.2472 340.111 72.0062 cv
339.864 71.7662 339.542 71.5671 339.14 71.4072 cv
338.74 71.2472 338.287 71.1061 337.78 70.9861 cv
337.273 70.8672 336.759 70.7332 336.239 70.5851 cv
335.705 70.4512 335.184 70.2902 334.677 70.0952 cv
334.171 69.9022 333.718 69.6512 333.318 69.3452 cv
332.916 69.0372 332.594 68.6542 332.347 68.1952 cv
332.099 67.7342 331.977 67.1772 331.977 66.5242 cv
331.977 65.7902 332.134 65.1531 332.447 64.6122 cv
332.761 64.0712 333.171 63.6212 333.677 63.2612 cv
334.184 62.9012 334.758 62.6342 335.398 62.4612 cv
336.038 62.2872 336.679 62.2012 337.32 62.2012 cv
338.066 62.2012 338.783 62.2842 339.471 62.4502 cv
340.158 62.6182 340.769 62.8882 341.302 63.2612 cv
341.836 63.6352 342.259 64.1111 342.573 64.6921 cv
342.886 65.2722 343.042 65.9772 343.042 66.8032 cv
340 66.8032 li
339.974 66.3762 339.884 66.0232 339.732 65.7422 cv
339.578 65.4622 339.373 65.2432 339.12 65.0822 cv
338.866 64.9222 338.577 64.8091 338.25 64.7411 cv
337.923 64.6752 337.566 64.6422 337.179 64.6422 cv
336.926 64.6422 336.672 64.6692 336.419 64.7222 cv
336.166 64.7762 335.935 64.8691 335.73 65.0021 cv
335.521 65.1362 335.352 65.3032 335.218 65.5021 cv
335.085 65.7021 335.019 65.9562 335.019 66.2632 cv
335.019 66.5432 335.071 66.7701 335.178 66.9432 cv
335.285 67.1161 335.495 67.2772 335.809 67.4242 cv
336.122 67.5702 336.556 67.7172 337.109 67.8641 cv
337.662 68.0112 338.387 68.1971 339.281 68.4242 cv
339.547 68.4781 339.918 68.5742 340.392 68.7142 cv
340.864 68.8552 341.335 69.0771 341.802 69.3852 cv
342.268 69.6912 342.672 70.1022 343.013 70.6161 cv
343.353 71.1312 343.522 71.7852 343.522 72.5862 cv
343.522 73.2411 343.397 73.8472 343.143 74.4081 cv
342.889 74.9681 342.512 75.4521 342.012 75.8592 cv
341.512 76.2651 340.892 76.5832 340.151 76.8091 cv
339.411 77.0372 338.553 77.1501 337.58 77.1501 cv
336.792 77.1501 336.028 77.0522 335.288 76.8592 cv
334.548 76.6672 333.894 76.3632 333.327 75.9492 cv
332.761 75.5362 332.311 75.0082 331.977 74.3682 cv
331.644 73.7272 331.483 72.9672 331.497 72.0862 cv
334.539 72.0862 li
334.539 72.5671 334.624 72.9742 334.798 73.3072 cv
349.406 76.8282 mo
346.264 76.8282 li
346.264 62.5402 li
349.406 62.5402 li
cp
351.927 65.1832 mo
351.927 62.5411 li
363.634 62.5411 li
363.634 65.1832 li
359.352 65.1832 li
359.352 76.8282 li
356.21 76.8282 li
356.21 65.1832 li
cp
369.677 60.9402 mo
366.975 60.9402 li
366.975 58.5981 li
369.677 58.5981 li
cp
373.799 60.9402 mo
371.097 60.9402 li
371.097 58.5981 li
373.799 58.5981 li
cp
372.219 71.3062 mo
370.418 66.0622 li
370.379 66.0622 li
368.517 71.3062 li
cp
372.039 62.5411 mo
377.383 76.8282 li
374.12 76.8282 li
373.04 73.6482 li
367.696 73.6482 li
366.576 76.8282 li
363.414 76.8282 li
368.818 62.5411 li
cp
377.082 65.1832 mo
377.082 62.5411 li
388.789 62.5411 li
388.789 65.1832 li
384.506 65.1832 li
384.506 76.8282 li
381.364 76.8282 li
381.364 65.1832 li
cp
f
261.675 40.662 mo
261.675 43.303 li
254.77 43.303 li
254.77 46.605 li
260.754 46.605 li
260.754 49.046 li
254.77 49.046 li
254.77 54.95 li
251.628 54.95 li
251.628 40.662 li
cp
270.811 47.126 mo
271.531 47.126 272.072 46.965 272.433 46.645 cv
272.793 46.325 272.972 45.805 272.972 45.085 cv
272.972 44.391 272.793 43.887 272.433 43.574 cv
272.072 43.26 271.531 43.103 270.811 43.103 cv
267.369 43.103 li
267.369 47.126 li
cp
271.932 40.662 mo
272.573 40.662 273.149 40.765 273.662 40.972 cv
274.176 41.179 274.618 41.462 274.984 41.822 cv
275.351 42.183 275.631 42.6 275.824 43.073 cv
276.018 43.547 276.114 44.058 276.114 44.604 cv
276.114 45.445 275.937 46.172 275.584 46.785 cv
275.23 47.399 274.654 47.866 273.853 48.186 cv
273.853 48.226 li
274.24 48.333 274.56 48.497 274.813 48.716 cv
275.067 48.937 275.275 49.196 275.435 49.497 cv
275.594 49.797 275.711 50.128 275.784 50.488 cv
275.857 50.847 275.908 51.208 275.934 51.568 cv
275.948 51.795 275.961 52.063 275.974 52.368 cv
275.988 52.676 276.01 52.988 276.044 53.309 cv
276.077 53.629 276.131 53.933 276.205 54.22 cv
276.278 54.507 276.388 54.75 276.534 54.95 cv
273.394 54.95 li
273.219 54.496 273.113 53.956 273.073 53.329 cv
273.033 52.703 272.972 52.103 272.892 51.528 cv
272.785 50.781 272.559 50.234 272.213 49.887 cv
271.865 49.541 271.298 49.367 270.511 49.367 cv
267.369 49.367 li
267.369 54.95 li
264.228 54.95 li
264.228 40.662 li
cp
282.724 54.95 mo
279.582 54.95 li
279.582 40.662 li
282.724 40.662 li
cp
297.012 40.662 mo
297.012 43.303 li
289.469 43.303 li
289.469 46.365 li
296.392 46.365 li
296.392 48.807 li
289.469 48.807 li
289.469 52.308 li
297.172 52.308 li
297.172 54.95 li
286.326 54.95 li
286.326 40.662 li
cp
306.034 52.308 mo
306.487 52.308 306.928 52.235 307.354 52.089 cv
307.781 51.943 308.16 51.698 308.494 51.357 cv
308.827 51.019 309.094 50.574 309.295 50.027 cv
309.494 49.48 309.596 48.813 309.596 48.026 cv
309.596 47.305 309.525 46.655 309.385 46.075 cv
309.244 45.495 309.014 44.998 308.694 44.584 cv
308.375 44.17 307.95 43.854 307.424 43.633 cv
306.897 43.414 306.246 43.303 305.473 43.303 cv
303.231 43.303 li
303.231 52.308 li
cp
306.253 40.662 mo
307.173 40.662 308.03 40.809 308.826 41.102 cv
309.618 41.395 310.306 41.836 310.885 42.423 cv
311.466 43.01 311.919 43.744 312.246 44.624 cv
312.573 45.505 312.736 46.539 312.736 47.725 cv
312.736 48.767 312.604 49.727 312.337 50.607 cv
312.069 51.488 311.667 52.248 311.126 52.889 cv
310.586 53.529 309.912 54.032 309.105 54.399 cv
308.298 54.767 307.346 54.95 306.253 54.95 cv
300.089 54.95 li
300.089 40.662 li
cp
321.87 47.126 mo
322.59 47.126 323.131 46.965 323.492 46.645 cv
323.851 46.325 324.031 45.805 324.031 45.085 cv
324.031 44.391 323.851 43.887 323.492 43.574 cv
323.131 43.26 322.59 43.103 321.87 43.103 cv
318.428 43.103 li
318.428 47.126 li
cp
322.99 40.662 mo
323.63 40.662 324.208 40.765 324.723 40.972 cv
325.236 41.179 325.676 41.462 326.043 41.822 cv
326.409 42.183 326.689 42.6 326.883 43.073 cv
327.076 43.547 327.173 44.058 327.173 44.604 cv
327.173 45.445 326.996 46.172 326.644 46.785 cv
326.289 47.399 325.713 47.866 324.911 48.186 cv
324.911 48.226 li
325.298 48.333 325.618 48.497 325.873 48.716 cv
326.126 48.937 326.332 49.196 326.493 49.497 cv
326.653 49.797 326.769 50.128 326.843 50.488 cv
326.916 50.847 326.966 51.208 326.992 51.568 cv
327.006 51.795 327.02 52.063 327.032 52.368 cv
327.047 52.676 327.07 52.988 327.103 53.309 cv
327.136 53.629 327.19 53.933 327.263 54.22 cv
327.336 54.507 327.446 54.75 327.593 54.95 cv
324.452 54.95 li
324.279 54.496 324.171 53.956 324.131 53.329 cv
324.092 52.703 324.031 52.103 323.951 51.528 cv
323.844 50.781 323.617 50.234 323.271 49.887 cv
322.923 49.541 322.357 49.367 321.571 49.367 cv
318.428 49.367 li
318.428 54.95 li
315.286 54.95 li
315.286 40.662 li
cp
333.482 54.95 mo
330.34 54.95 li
330.34 40.662 li
333.482 40.662 li
cp
346.026 44.474 mo
345.839 44.174 345.605 43.911 345.326 43.683 cv
345.044 43.457 344.729 43.28 344.374 43.153 cv
344.022 43.027 343.652 42.963 343.264 42.963 cv
342.557 42.963 341.957 43.1 341.464 43.374 cv
340.969 43.647 340.569 44.014 340.262 44.474 cv
339.955 44.934 339.732 45.459 339.592 46.044 cv
339.451 46.632 339.382 47.239 339.382 47.866 cv
339.382 48.466 339.451 49.05 339.592 49.617 cv
339.732 50.184 339.955 50.694 340.262 51.148 cv
340.569 51.601 340.969 51.965 341.464 52.238 cv
341.957 52.513 342.557 52.648 343.264 52.648 cv
344.224 52.648 344.974 52.356 345.515 51.769 cv
346.057 51.182 346.386 50.408 346.507 49.447 cv
349.548 49.447 li
349.468 50.341 349.26 51.148 348.927 51.868 cv
348.593 52.589 348.153 53.202 347.606 53.709 cv
347.06 54.217 346.419 54.603 345.685 54.87 cv
344.952 55.137 344.144 55.27 343.264 55.27 cv
342.171 55.27 341.185 55.08 340.313 54.7 cv
339.438 54.319 338.701 53.796 338.102 53.129 cv
337.502 52.462 337.04 51.678 336.721 50.778 cv
336.4 49.877 336.24 48.907 336.24 47.866 cv
336.24 46.799 336.4 45.808 336.721 44.894 cv
337.04 43.98 337.502 43.183 338.102 42.503 cv
338.701 41.822 339.438 41.289 340.313 40.902 cv
341.185 40.515 342.171 40.321 343.264 40.321 cv
344.051 40.321 344.795 40.435 345.495 40.662 cv
346.195 40.889 346.822 41.219 347.376 41.652 cv
347.93 42.086 348.387 42.623 348.747 43.263 cv
349.108 43.904 349.334 44.637 349.428 45.465 cv
346.386 45.465 li
346.332 45.105 346.213 44.775 346.026 44.474 cv
355.569 40.662 mo
355.569 46.145 li
361.352 46.145 li
361.352 40.662 li
364.494 40.662 li
364.494 54.95 li
361.352 54.95 li
361.352 48.786 li
355.569 48.786 li
355.569 54.95 li
352.426 54.95 li
352.426 40.662 li
cp
374.082 50.708 mo
368.058 50.708 li
368.058 48.267 li
374.082 48.267 li
cp
384.395 49.427 mo
382.595 44.184 li
382.554 44.184 li
380.693 49.427 li
cp
384.215 40.662 mo
389.558 54.95 li
386.296 54.95 li
385.216 51.769 li
379.872 51.769 li
378.753 54.95 li
375.591 54.95 li
380.993 40.662 li
cp
394.868 40.662 mo
394.868 52.308 li
401.832 52.308 li
401.832 54.95 li
391.725 54.95 li
391.725 40.662 li
cp
415.031 40.662 mo
415.031 43.303 li
407.486 43.303 li
407.486 46.365 li
414.41 46.365 li
414.41 48.807 li
407.486 48.807 li
407.486 52.308 li
415.19 52.308 li
415.19 54.95 li
404.344 54.95 li
404.344 40.662 li
cp
417.451 40.662 mo
421.093 40.662 li
423.895 45.225 li
426.797 40.662 li
430.239 40.662 li
425.656 47.486 li
430.639 54.95 li
426.897 54.95 li
423.776 50.007 li
420.593 54.95 li
417.072 54.95 li
422.054 47.466 li
cp
440.605 49.427 mo
438.804 44.184 li
438.764 44.184 li
436.902 49.427 li
cp
440.424 40.662 mo
445.768 54.95 li
442.506 54.95 li
441.425 51.769 li
436.083 51.769 li
434.963 54.95 li
431.8 54.95 li
437.203 40.662 li
cp
450.757 40.662 mo
456.721 50.247 li
456.761 50.247 li
456.761 40.662 li
459.701 40.662 li
459.701 54.95 li
456.56 54.95 li
450.616 45.385 li
450.576 45.385 li
450.576 54.95 li
447.636 54.95 li
447.636 40.662 li
cp
469.007 52.308 mo
469.461 52.308 469.901 52.235 470.328 52.089 cv
470.755 51.943 471.135 51.698 471.469 51.357 cv
471.802 51.019 472.068 50.574 472.268 50.027 cv
472.469 49.48 472.569 48.813 472.569 48.026 cv
472.569 47.305 472.499 46.655 472.36 46.075 cv
472.218 45.495 471.989 44.998 471.668 44.584 cv
471.348 44.17 470.925 43.854 470.399 43.633 cv
469.871 43.414 469.22 43.303 468.447 43.303 cv
466.206 43.303 li
466.206 52.308 li
cp
469.227 40.662 mo
470.147 40.662 471.004 40.809 471.8 41.102 cv
472.592 41.395 473.28 41.836 473.859 42.423 cv
474.44 43.01 474.893 43.744 475.22 44.624 cv
475.548 45.505 475.71 46.539 475.71 47.725 cv
475.71 48.767 475.578 49.727 475.31 50.607 cv
475.043 51.488 474.64 52.248 474.101 52.889 cv
473.56 53.529 472.886 54.032 472.079 54.399 cv
471.271 54.767 470.321 54.95 469.227 54.95 cv
463.063 54.95 li
463.063 40.662 li
cp
488.978 40.662 mo
488.978 43.303 li
481.434 43.303 li
481.434 46.365 li
488.358 46.365 li
488.358 48.807 li
481.434 48.807 li
481.434 52.308 li
489.139 52.308 li
489.139 54.95 li
478.293 54.95 li
478.293 40.662 li
cp
498.539 47.126 mo
499.261 47.126 499.801 46.965 500.161 46.645 cv
500.522 46.325 500.702 45.805 500.702 45.085 cv
500.702 44.391 500.522 43.887 500.161 43.574 cv
499.801 43.26 499.261 43.103 498.539 43.103 cv
495.097 43.103 li
495.097 47.126 li
cp
499.66 40.662 mo
500.301 40.662 500.878 40.765 501.391 40.972 cv
501.905 41.179 502.345 41.462 502.712 41.822 cv
503.08 42.183 503.359 42.6 503.553 43.073 cv
503.747 43.547 503.843 44.058 503.843 44.604 cv
503.843 45.445 503.667 46.172 503.312 46.785 cv
502.959 47.399 502.382 47.866 501.581 48.186 cv
501.581 48.226 li
501.969 48.333 502.288 48.497 502.542 48.716 cv
502.795 48.937 503.003 49.196 503.162 49.497 cv
503.323 49.797 503.439 50.128 503.512 50.488 cv
503.586 50.847 503.637 51.208 503.662 51.568 cv
503.676 51.795 503.689 52.063 503.703 52.368 cv
503.716 52.676 503.739 52.988 503.773 53.309 cv
503.805 53.629 503.86 53.933 503.934 54.22 cv
504.007 54.507 504.117 54.75 504.264 54.95 cv
501.121 54.95 li
500.948 54.496 500.841 53.956 500.801 53.329 cv
500.761 52.703 500.702 52.103 500.621 51.528 cv
500.515 50.781 500.287 50.234 499.94 49.887 cv
499.594 49.541 499.026 49.367 498.24 49.367 cv
495.097 49.367 li
495.097 54.95 li
491.957 54.95 li
491.957 40.662 li
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
